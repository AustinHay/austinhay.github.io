<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Austin A. Hay</title>
    <description> is a millenial blogger, engineer &amp; operater focused on strategy, leadership, self-developement, entrepreneurship, and rookie programming. Don&#39;t be a stranger - drop me an email to connect. Contents and code &amp;copy; 2015</description>
    <link>http://austinhay.com/</link>
    <atom:link href="http://austinhay.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 10 Mar 2015 17:40:50 -0700</pubDate>
    <lastBuildDate>Tue, 10 Mar 2015 17:40:50 -0700</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Collaborative Sales</title>
        <description>&lt;p&gt;Everyone has felt quota anxiety - that feeling you get when your sales lead puts an often arbitrary number on the number of interactions you need to have with others per unit of time. Sometimes it’s cold outbounds per quarter, sometimes it’s calls per week. No matter what unit of measurement you look at, these quotas are inherently created to drive competition and maximize employee performance. But does it really work? And does it cause more toxicity to your sales team than it does productivity?&lt;/p&gt;

&lt;h3 id=&quot;a-new-type-of-selling&quot;&gt;A New Type of Selling&lt;/h3&gt;

&lt;p&gt;Everyone who’s seen Glengarry Glen Ross knows Alec Baldwin’s infamous Art of Selling scene in which he breaks down sales into a contest - 3rd prize is that you’re fired. Baldwin goes on to make some seemingly ridiculous quotes: “Leads are weak? You’re weak.” Sprinkled in are notes of sexism and the punch-line… Always be closing.&lt;/p&gt;

&lt;div class=&quot;imageleft&quot;&gt;
&lt;iframe width=&quot;500px&quot; height=&quot;320px&quot; src=&quot;https://www.youtube.com/embed/zCf46yHIzSo&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Sales teams often walk far too close to this comical distopia. It may seem innocuous, but strip away all the dramatic lines, the yelling, the ridiculous analogies, and you’re still left with the toxic undertones created by hyper-competitive sales. Sales competition not only leads to &lt;a href=&quot;http://www.tlnt.com/2012/01/10/10-destructive-behaviors-that-can-bring-down-a-team%E2%80%99s-success/&quot;&gt;destructive behaviors&lt;/a&gt; that can tear the sales org apart, but it’s now being questioned as the &lt;a href=&quot;http://enterprise-gamification.com/index.php?option=com_content&amp;amp;view=article&amp;amp;id=197:9-reasons-why-competition-is-bad-for-sales&amp;amp;catid=10&amp;amp;Itemid=16&amp;amp;lang=en&quot;&gt;best practice&lt;/a&gt; in driving effective sales.&lt;/p&gt;

&lt;p&gt;This is not to say that some competition isn’t healthy. Competitive sales has been around forever, but there is room for newer, more collaborative sales models that focus on productivity and employee well-being rather than arbitrary bottom lines.&lt;/p&gt;

&lt;p&gt;In fact, for high-tech companies that work very closely with developers in growing their organization through the installation of SDKs or other drop in code, collaborative sales is the key to success. Github speaks to this in a recent podcast:&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;166&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/194421673&amp;amp;color=ff5500&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&quot;&gt;&lt;/iframe&gt;

&lt;h3 id=&quot;my-perception-the-problem-with-sales-competition&quot;&gt;My Perception: The Problem With Sales Competition&lt;/h3&gt;

&lt;p&gt;Lots of other people have noted the problems with competitive sales, but in my experience, there are a few things that are worth highlighting. All of these are my own opinions and thoughts. Others might disagree or have found a competitive sales team mindset that works! That’s okay. What’s more important is being aware of how others function and adapating your sales team to be as productive as possible.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Competition incentivizes individual accomplishment and success over company goals.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Competition means splitting up value based on quantity &amp;amp; individual — which is wrong! Everyone should feel compelled to jump in and help sell and evangelize your product!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Without collaboration on the sales team, members may try to keep “secrets” to selling that help them pull greater numbers than other team members. This is immensely toxic and discourages feedback and improvement both at the process and individual level.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Competition makes it hard to learn: everyone brings a certain set of strengths and weaknesses to sales. If we incentivize numbers, people will lose sight of their long-term ability to be awesome at evangelizing Branch. &lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;collaborative-sales-explained&quot;&gt;Collaborative Sales Explained&lt;/h3&gt;

&lt;p&gt;Collaborative sales concentrates on the team-centric nature of selling. Less focus is placed on gathering a numerical volume of leads, and more focus is placed on cultivating real business fits. &lt;b&gt;Whereas competitive sales is transactional, collaborative sales is relational.&lt;/b&gt; Collaborative sales cares about: &lt;/p&gt;

&lt;p&gt;1.) High quality business connections.
2.) Product &amp;amp; company evangelism.
3.) A change in mindset &amp;amp; jargon: relationship building vs selling.
4.) Knowledge sharing.
5.) Data driven selling and team self-awareness.&lt;/p&gt;

&lt;p&gt;These core tenets of collaborative sales not only lead to a more productive sales team, but they can help reduce the anxiety that often goes hand-in-hands with hyper-competition. More imporantly, by focusing on collaboration and sharing you will create an environment where all sales team-members learn and improve, burn out less frequently (or at all), focus on the company’s success, put the the customer first, and, generally, sell more intelligently. &lt;/p&gt;

&lt;h3 id=&quot;collaborative-sales-in-action&quot;&gt;Collaborative Sales in Action&lt;/h3&gt;

&lt;p&gt;Talkin’ the talk is not enough with collaborative sales - you also need to &lt;a href=&quot;https://www.youtube.com/watch?v=qIOFs2onNE0&quot;&gt;walk the walk&lt;/a&gt;. To help sales teams convert, I can point out how collabortive sales worked for my team at &lt;a href=&quot;https://branch.io&quot;&gt;Branch&lt;/a&gt; during Mobile World Congress 2015. &lt;/p&gt;

&lt;p&gt;The two person sales team worked together the entire conference, generating over 100 leads with a &amp;gt; 25% lead reply rate over 3 days. Part of this was due to the nature of the conference, but, I believe, much of this was due to collaborative sales. &lt;b&gt;So what does collaborative sales in action look like?&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Developed an iOS application tool together as a team, that would streamline our sales cycle and allow us to count our total number of leads so we could calculate our total ROI. Amazing meeting of technical talent, sales need, product cycle, and just raw teamwork. It was a great bonding activity that added huge value to our trip and our follow up in the sales cycle. We did this on the plane to Barcelona in a few hours!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Set expectations upfront that we would work together and not set daily quotas, but that we had a cumulative number we wanted to get &lt;b&gt;together&lt;/b&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Agreed to communicate and give each other feedback on our pitching abilities, how we presented ourselves in front of partners, how we spoke about technical aspects of our product, and how we followed up.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Worked the conference floor as a team in order to properly prospect the best partners in the area we identified as “most relevant.””&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Split up when necessary to give ourselves a break, experiment, move quickly, and improve our independent selling abilities. &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Both of us switched off engaging with very potential important partners to build our experience. This allowed us to build our independent selling skills, learn how to take subtle cues, and &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Over time, we became more comfortable listening, understanding one another’s statements, and contributing valuable information that made for a better pitch team pitch.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;final-takeaways&quot;&gt;Final Takeaways&lt;/h3&gt;

&lt;p&gt;There are many advocates for competitive sales - I’m not here to discredit these techniques. I am here to say, however, that new sales teams should consider exploring new techniques when establishing a culture at their sales organization. Quotas are good, but are short-sighted and don’t focus on the long term prosperity of a sales orgs’ people or their ability to deliver results quarter after quarter. And in a world where people are the heart and soul of a company’s success, I think collaborative sales orgs can deliver incredible sales results while maintaining the best sales talent.&lt;/p&gt;

</description>
        <pubDate>Fri, 06 Mar 2015 00:00:00 -0800</pubDate>
        <link>http://austinhay.com/sales/2015/03/06/Collaborative-Sales.html</link>
        <guid isPermaLink="true">http://austinhay.com/sales/2015/03/06/Collaborative-Sales.html</guid>
        
        <category>Collaboration</category>
        
        <category>Lessons Learned</category>
        
        <category>Selling</category>
        
        <category>Branch Metrics</category>
        
        <category>Personal Development</category>
        
        
        <category>sales</category>
        
      </item>
    
      <item>
        <title>Podcasting Takeaways - Part 1</title>
        <description>&lt;p&gt;Since I began working at &lt;a href=&quot;http://branch.io&quot;&gt;Branch Metrics&lt;/a&gt;, I’ve had the privilege of curating the content and strategy behind our Podcast outreach. &lt;/p&gt;

&lt;p&gt;In the beginning, I drew a lot of inspiration from &lt;a href=&quot;https://twitter.com/mvc&quot;&gt;Michael Copeland&lt;/a&gt; over at the A16Z podcast station. As I started doing more podcasts, I learned some important lessons on creating audio that is well-curated, compelling, thoughtful, interesting, exciting and fun. &lt;/p&gt;

&lt;div class=&quot;imageleft&quot; style=&quot;width:60%;&quot;&gt;
&lt;iframe width=&quot;100%&quot; height=&quot;450&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/users/138903540&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&amp;amp;visual=true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;In the future, as I learn, grow, and publish more podcasts, I will throw back all the lessons I’ve learned under the same series.&lt;/p&gt;

&lt;h3 id=&quot;tips-from-a-month-in-podcasting&quot;&gt;Tips from a Month in Podcasting&lt;/h3&gt;

&lt;p&gt;&lt;b&gt;1.) Voice is everything:&lt;/b&gt; It might seem cliche, but I couldn’t stress this point more. Your voice and the voices of othes are what make a podcast rock or die before it gets published. As I’ve progressed in the last month I’ve had to listen to my voice hundreds of times. This has caused me to reflect on how I sound, not only to myself but to others – do I talk loud, quiet, fast, slow, or strange? What are the words I use too often? How do I ask questions? A huge part of improving your podcast outreach is having an excellent interviewer. If you’re taking on this role then don’t be afraid to reflect, get feedback and make changes to the way you use your voice.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;2.) Set the right expectations:&lt;/b&gt; A lot of speakers come into podcasts not knowing what to expect. Instead of hoping that they will get it right automatically, just be upfront in your expectations! Specifically, acknowledge how you want your podcast to flow, what flavor of questions you will ask, how you will ask those questions, what type of responses you think your audience will care about and anything else that you think will benefit them in knowing. This was some of the feedback I got early on from my first few podcasts and it has been a guiding principle ever since - don’t leave anything to chance. Be upfront, be honest, be genuine, and set your expectations early. Confirm them as often as you can.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;3.) Laughing can kill the flow:&lt;/b&gt; I like to smile and laugh a lot. Unfortunately, this doesn’t do well for my podcasts. In general, laughing can disrupt the flow of the speakers’ voices and can cause an uncomfortable interruption in the thought process of those listening. If something is funny, it’s okay to laugh on a podcast, but in general you should think about how hard you are laughing and if it really is necessary for the situation. If all else fails, take it down a notch and try chuckling instead.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;4.) Timing your questions perfectly:&lt;/b&gt; The goal of the interviewer is to guide the discussion, ask meaningful and related questions, and create a unified theme around the podcast. Much of this is done by asking questions at the right time. In general, I’ve found there are two important things to keep in mind:&lt;/p&gt;

&lt;h4 id=&quot;reasons-to-ask-questions&quot;&gt;Reasons to Ask Questions&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Acknowlegment &amp;amp; Elaboration: You ask a question to confirm you understand what the speaker is saying and to inquire for deeper elaboration.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Follow up: You want them to immediately follow up on their point with a similar, related point&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Shift Directions: You want to shift into a new question or topic.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are the three main types of buckets that I think about when posing new questions. The hard part is not really thinking of the questions, but asking them in the right way.&lt;/p&gt;

&lt;h4 id=&quot;how-to-position-amp-execute-good-questions&quot;&gt;How to Position &amp;amp; Execute Good Questions:&lt;/h4&gt;

&lt;p&gt;The easiest way to deliver high quality questions in the right way is to find the pause after which the speaker is finishing a threaded thought and is moving into a new moment. Don’t be afraid to insert yourself if you want to shift the conversation. The most important thing to remember is that it should be a discussion. How would you insert a comment or question into a conversation with your friend or family? Hopefully, by waiting for the right timing and by picking up on context clues based on the information they are feeding you. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;5.) Know your acknowledgement words:&lt;/b&gt; Almost as important as asking good questions is listening to the responses your speaker gives and ackowledging important points. It likely seems trivial that this made it onto my top tips, but when you’re listening to a speaker tell a compelling story, or describe a fascinating thought on the market, nothing kills the mood than a misplaced comment or word. From what I’ve found, it’s best to keep things simple. Use words like “Yeah, Sure, Interesting, That’s really cool.” The more you try to interrupt, use long-winded and complicated phrases, or distract the listener from the speaker, the more drop-off you’re likely to get.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;6.) Discussion &amp;amp; conversation vs. interview:&lt;/b&gt; After trying both models, I think there is a time and place for both types of podcasts. However, discussion podcasts tend to have higher listens, more shares, and are much easier to both conduct and listen to. A discussion makes things relaxed and in turn allows the speaker to talk about a subject off the cuff in a way that most audiences never get. &lt;/p&gt;

&lt;p&gt;An interview can also lead to a great podcast, but most people freeze up when “interviewed” and tend to project prepared, static answers that do not lead to good pocast material. If you’re doing an interview it should be with somebody seasoned and who will be conducting the interview off the cuff (so that it feels more like a discussion) – even if the questions are curated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;7.) Don’t forget distribution:&lt;/b&gt; Soundcloud has become my go-to for podcasts because it is incredibly simple to setup and manage. Additionally, Soundcloud has great analytics at a pretty good price-point, which make it a great place to begin logging pods. However, despite this notion, it’s important to remember that there are many other notable channels for podcast distribution. In fact, if you don’t distribute to as many channels as possible, you run the risk of losing listeners. &lt;/p&gt;

&lt;p&gt;In this respect, I advise checking out the Soundcloud beta RSS program, which allows you to use your Soundcloud casts to distribute among most RSS aggregators, like iTunes, Stitcher, TuneIn and Instacast. &lt;/p&gt;

&lt;p&gt;Start &lt;a href=&quot;http://help.soundcloud.com/customer/portal/articles/1197932-how-do-i-find-my-rss-feed-&quot;&gt;here&lt;/a&gt; and fill out the application that you’ll see upon reading the first paragraph: RSS beta program &lt;a href=&quot;https://docs.google.com/a/branchmetrics.io/forms/d/19VL22n_LS3MYJOxd54BwFo-a0LFTrnFQbe6kjb5SkyI/viewform&quot;&gt;application&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If approved, you can grab your RSS feed straight from SoundCloud and push a submission into &lt;a href=&quot;https://www.apple.com/itunes/podcasts/specs.html#testing&quot;&gt;iTunes&lt;/a&gt; or other RSS aggregators. By far, this is the simplest way I have found to mass distribute podcasts with as little effort as possible.&lt;/p&gt;

&lt;p&gt;This list isn’t complete, but does capture an amateur’s start to podcasting. The best thing you can do for yourself as you start to curate and record podcasts is to think thoroughly about what your intent, your audience, and yourself. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;What&lt;/b&gt; is the reason you’re making this podcast? What message or thoughts are you hoping to capture and convey? &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Who&lt;/b&gt; is your audience; and who’s going to be most captivated by what you’re talking about? Speak to them! &lt;/p&gt;

&lt;p&gt;&lt;b&gt;How&lt;/b&gt; are you coming across? Be self-aware. Think about how you ask questions, how you speak, what your voice sounds like and try to actively improve so that your listeners get the best experience you can deliver.&lt;/p&gt;

</description>
        <pubDate>Sun, 01 Mar 2015 00:00:00 -0800</pubDate>
        <link>http://austinhay.com/podcast/2015/03/01/Podcasting-Takeaways-Part-1.html</link>
        <guid isPermaLink="true">http://austinhay.com/podcast/2015/03/01/Podcasting-Takeaways-Part-1.html</guid>
        
        <category>Software</category>
        
        <category>Branch Metrics</category>
        
        <category>Personal Development</category>
        
        
        <category>podcast</category>
        
      </item>
    
      <item>
        <title>A Big Announcement via Branch Metrics</title>
        <description>&lt;p&gt;The recent &lt;a href=&quot;http://techcrunch.com/2015/02/26/branch-metrics-raises-15-million-for-its-smarter-mobile-deep-linking-technology/&quot;&gt;announcement of our Series A&lt;/a&gt; has been received with overwhelming support! I wrote about it in greater detail over on &lt;a href=&quot;https://blog.branch.io/where-branch-is-headed/&quot;&gt;Branch&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Besides our announcement, lots of people have asked us a simple question: How did Branch get started?&lt;/p&gt;

&lt;p&gt;In another podcast with Branch Metrics, I sit down with the co-founding team at Branch Metrics to answer this question and talk about the future of both Branch and mobile deeplinking. &lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;166&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/193189451&amp;amp;color=ff5500&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Fri, 27 Feb 2015 00:00:00 -0800</pubDate>
        <link>http://austinhay.com/branch/2015/02/27/A-Big-Announcement.html</link>
        <guid isPermaLink="true">http://austinhay.com/branch/2015/02/27/A-Big-Announcement.html</guid>
        
        <category>Mobile</category>
        
        <category>Deeplinking</category>
        
        <category>Software</category>
        
        <category>Series A</category>
        
        <category>Venture Capital</category>
        
        <category>Personal Development</category>
        
        
        <category>branch</category>
        
      </item>
    
      <item>
        <title>A New Frontier: First Podcast @ Branch</title>
        <description>&lt;p&gt;An exciting career first happened earlier this week: I conducted my first podcast. It seems trivial, but in fact, podcasting is not only a great way to learn, but a great way to dive into a company’s culture and help produce interesting, useful content. In this first podcast, where I interview Branch CEO Alex Austin, we discuss mobile &amp;amp; deeplinking. What’s funny is that the podcast was an immense edification tool for myself; I hope it continues to serve this purpose not only for all the new partners and developers we work with, but also for incoming Branch employees.&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;166&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/192190273&amp;amp;color=ff5500&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Take a listen and give me feedback! What were things you enjoyed? What would you improve? This podcast series will continue, so help me deliver compelling content for you! &lt;/p&gt;

</description>
        <pubDate>Mon, 23 Feb 2015 00:00:00 -0800</pubDate>
        <link>http://austinhay.com/podcast/2015/02/23/A-New-Frontier-Podcasts.html</link>
        <guid isPermaLink="true">http://austinhay.com/podcast/2015/02/23/A-New-Frontier-Podcasts.html</guid>
        
        <category>Mobile</category>
        
        <category>Deeplinking</category>
        
        <category>Software</category>
        
        
        <category>podcast</category>
        
      </item>
    
      <item>
        <title>Mobile Page Rank in Review</title>
        <description>&lt;p&gt;Earlier this year in a &lt;a href=&quot;https://soundcloud.com/a16z/a16z-podcast-searching-for&quot;&gt;podcast&lt;/a&gt; titled “Searching for Mobile’s Own Pagerank” by &lt;a href=&quot;https://twitter.com/balajis&quot;&gt;Balaji S.&lt;/a&gt;, &lt;a href=&quot;http://cdixon.org/&quot;&gt;Chris Dixon&lt;/a&gt; and &lt;a href=&quot;http://ben-evans.com/&quot;&gt;Benedict Evans&lt;/a&gt; discuss the fact that a mobile pagerank really doesn’t exist and where the future of native vs. mobile apps might be headed. Many of the questions they pose center on mobile as an ecosystem that Evans’ likes to describe as a “swirling mass.”&lt;/p&gt;

&lt;p&gt;Things may not have changed much in half a year, but I think it’s important to review their podcast and think about the questions that still linger on the industry’s mind with regard to finding a native page rank solution. &lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;166&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/141242781&amp;amp;color=ff5500&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&quot;&gt;&lt;/iframe&gt;

&lt;h3 id=&quot;original-podcast-notes&quot;&gt;Original Podcast Notes:&lt;/h3&gt;

&lt;p&gt;To save you some trouble, I’ve taken the liberty of curating a set of notes on the podcast. Enjoy:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pre-Page Rank Era of Mobile&lt;/li&gt;
  &lt;li&gt;When you look at the app store today it’s like looking at Yahoo in 1995&lt;/li&gt;
  &lt;li&gt;No way to find the right things you want to use on the device&lt;/li&gt;
  &lt;li&gt;App stores are like Amazon – list everything that exists, but not way to discover and explore this&lt;/li&gt;
  &lt;li&gt;Pre-NetScape Phase as well: things are happening outside of the browser&lt;/li&gt;
  &lt;li&gt;How to we find, explore, and interact with content.&lt;/li&gt;
  &lt;li&gt;There’s the app, webapp, card, url, messaging app etc. but it’s not yet well defined how to find the content you’re looking for and on the dev side, how you explore engage customers within that&lt;/li&gt;
  &lt;li&gt;Chris Dixon: Nobody has invented the real page rank for mobile yet.&lt;/li&gt;
  &lt;li&gt;No HTML for native – no deeplinking through content, no analygous linking structure that you see on the web&lt;/li&gt;
  &lt;li&gt;You don’t have a universal resource locator for every single piece of content with apps&lt;/li&gt;
  &lt;li&gt;Even if you deeplink to content you still have to have the app&lt;/li&gt;
  &lt;li&gt;The reason we had the web is because it was impossibly difficult to do anything else – it was too hard to get people to buy the desktop software&lt;/li&gt;
  &lt;li&gt;Smartphones are communications platforms that desktops never were &lt;/li&gt;
  &lt;li&gt;The smartphone itself becomes the social platform – the device itself is the platform&lt;/li&gt;
  &lt;li&gt;Not limited to the browser… you can do all other sorts of things&lt;/li&gt;
  &lt;li&gt;Pulling away from native apps (Apple with health/cards)&lt;/li&gt;
  &lt;li&gt;An app is a view on top of an underlying data store&lt;/li&gt;
  &lt;li&gt;Urbit – web links between pages… but how should we link between apps?&lt;/li&gt;
  &lt;li&gt;We shouldn’t really have to document an API for every app by utilizing the internal directory structure on the local phone&lt;/li&gt;
  &lt;li&gt;Phones as a distributed data center&lt;/li&gt;
  &lt;li&gt;Links between applications based on data interces &lt;/li&gt;
  &lt;li&gt;Large caches of local data – inversion of today’s model of access&lt;/li&gt;
  &lt;li&gt;Apple runs a full stack with integration based on fingerprinting, wireless, bluetooth etc.&lt;/li&gt;
  &lt;li&gt;Google is trying to the opposite – lifting all its services into the cloud.&lt;/li&gt;
  &lt;li&gt;Language and player is less important than the mobile interaction – what will the icon on your homescreen look like, how did it get there?, did it appear automatically?, are there downnloads, is it geo-traced?&lt;/li&gt;
  &lt;li&gt;Deeplinking into apps fades away in this context&lt;/li&gt;
  &lt;li&gt;Who is it that is going to kill the native app? Apple.&lt;/li&gt;
  &lt;li&gt;Google might try, but Apple will be the one who turns around and changes the infrastructure and platform.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;killer-questions-on-mobile-amp-deeplinking&quot;&gt;Killer Questions on Mobile &amp;amp; Deeplinking&lt;/h3&gt;

&lt;p&gt;So, where does this leave us 6 months after a deep dive from the industry’s thought leaders into mobile and native? Not much further away from where we were then. As I began thinking about what’s changed, I was actually only able to come up with a new set of questions. Instead of answering questions, which I have no expertise to fully answer, I will instead leave you with a new set of questions – hopefully to help you think about the changing target that is native page rank and the mobile industry as a whole. Since I work for &lt;a href=&quot;https://branch.io&quot;&gt;Branch&lt;/a&gt;, one of my key focuses in mobile is deeplinking… this definitely flavors my view of the world:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Why isn’t there a better way to search for apps on the app stores – both for Android and iOS?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Is this a universal developer pain point? Why?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How do you think deeplinking is going to help native apps evolve out of the pre-page rank era of mobile?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Why is deeplinking so much more than just the links?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How do you think deeplinking could ansser the problem: “You don’t have a universal resource locator for every single piece of content with apps.”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Do you think Apple is going to kill native apps?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Do you think native apps are going to die off in the same way that desktop software has?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Do you think deeplinking through the app store and deeplinking app content really fades into the background when you think about mobile interaction from a very high level? How does Branch links fit into this ecosystem?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are the questions on my mind as a technologist living in a world as unclear and swirling as Evans’ describes. For now, there are no good answers, but I feel confident knowing that perhaps &lt;a href=&quot;https://branch.io/features/&quot;&gt;links&lt;/a&gt; can get us there.&lt;/p&gt;

</description>
        <pubDate>Sat, 21 Feb 2015 00:00:00 -0800</pubDate>
        <link>http://austinhay.com/branch/2015/02/21/Mobile-Page-Rank-in-Review.html</link>
        <guid isPermaLink="true">http://austinhay.com/branch/2015/02/21/Mobile-Page-Rank-in-Review.html</guid>
        
        <category>Mobile</category>
        
        <category>Deeplinking</category>
        
        <category>Software</category>
        
        <category>Page Rank</category>
        
        <category>Native</category>
        
        
        <category>branch</category>
        
      </item>
    
      <item>
        <title>Mobile Deeplinking Basics via Branch Metrics</title>
        <description>&lt;p&gt;In this short article, oringinally &lt;a href=&quot;https://blog.branch.io/mobile-deeplinking-basics/&quot;&gt;published on Branch&lt;/a&gt;, we dive into mobile deeplinking.&lt;/p&gt;

&lt;p&gt;Deep linking has been one of the most talked about trends in tech throughout the last year, but not everyone fully understands what deeplinking even is and how it can transform mobile. &lt;/p&gt;

&lt;h3 id=&quot;deeplinking-in-context&quot;&gt;Deeplinking in Context&lt;/h3&gt;

&lt;p&gt;Mobile is taking over and deep linking is &lt;a href=&quot;http://readwrite.com/2015/01/29/deep-linking-button-urx-sdk-now-hot&quot;&gt;heating up&lt;/a&gt; alongside, as it promises to revolutionize UX and the way in which apps deliver content to users. Industry thought leaders have already started predicting how deeplinking may address the lack of true native page rank or how the end of the native app might be coming.&lt;/p&gt;

&lt;p&gt;On the other hand, news and media coverage focus on the promise of deep linking to provide HTTP-like functionality for mobile apps (more on this below!).  &lt;/p&gt;

&lt;p&gt;Here at Branch we look at all of these things and see a huge opportunity for developers to grow their native app audiences and bring about a fundamental change in the way people interact in the mobile ecosystem. So, digging deeper, what really are the benefits of deep linking? The technology helps app developers, marketers and users in a number of ways. Specifically, deep linking can:&lt;/p&gt;

&lt;p&gt;1.) Drive app install and conversion.&lt;/p&gt;

&lt;p&gt;2.) Track organic growth channels, understand ad campaign impact on app numbers, and analyze K factors.&lt;/p&gt;

&lt;p&gt;3.) Supply dedicated user information &lt;u&gt;between&lt;/u&gt; web/mobile and &lt;u&gt;through&lt;/u&gt; app install.&lt;/p&gt;

&lt;p&gt;4.) Track and manage marketing campaign attribution.&lt;/p&gt;

&lt;p&gt;5.) Linking analygous to HTTP providing a seamless way to interact with apps from links.&lt;/p&gt;

&lt;p&gt;6.) Allow mobile apps to work together, intuitively streamlining the process for developers - all of them!&lt;/p&gt;

&lt;figure class=&quot;imageleft&quot;&gt;
&lt;a href=&quot;http://branch.io&quot;&gt;
&lt;img src=&quot;/images/blogs/branch/mobile-deeplinking-basics-1.png&quot; /&gt;
&lt;/a&gt;
  &lt;p style=&quot;font-style: italic; padding-top: 4%;&quot;&gt;
  With so many different benefits, it can be difficult to pick the deeplinking solution that does it all best. Branch links help app developers get the most out of deeplinks.
  &lt;/p&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;b&gt;This last point is particularly important: deep linking can allow your apps to have more exposure, higher installs and conversions, but most importantly, an easier, more intuitive integration with the mobile app ecosystem.&lt;/b&gt;&lt;/p&gt;

&lt;h3 id=&quot;whats-a-deep-link&quot;&gt;What’s a Deep Link?&lt;/h3&gt;

&lt;p&gt;The good thing about the internet is that there are many great resources that already exist on this subject. I’m in favor of you reading mine, but if it doesn’t quite suit your fancy, I’d recommend checking out &lt;a href=&quot;http://sarlitt.me/what-is-app-deep-linking/&quot;&gt;this other great read&lt;/a&gt; on Deep Linking.&lt;/p&gt;

&lt;p&gt;Really, deeplinking begins with URIs. &lt;/p&gt;

&lt;p&gt;In programming, a URI (Uniform Resource Identifier) is just a string of characters to identify the name of a resource on a network. URIs allows users to identify and interact with the resource representation over a network using specific protocols. &lt;b&gt;The most common URI out there is the URL, a &lt;a href=&quot;http://en.wikipedia.org/wiki/Uniform_resource_locator&quot;&gt;Uniform Resource Locator&lt;/a&gt; – or more simply, a web address.&lt;/b&gt; URIs are not not limited to just this. URIs can also be comprised of URNs (Uniform Resource Name). In practice a URN functions as a web resource’s “name” while the URL functions as its address. If you’re not sold on their differences, take a look &lt;a href=&quot;http://stackoverflow.com/questions/176264/whats-the-difference-between-a-uri-and-a-url&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;At a very high level a deeplink is just a hyperlink, or a special URI that routes to a resource deeper within a site’s hierarchy. It’s a hyperlink to an indexed or searchable page on a website other than the site’s home page. Generally, a website home page is at the top page in a site’s hierarchy and any other page outside of that is considered a “deep” link. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mobiledeeplinking.org/&quot;&gt;Mobile deep linking&lt;/a&gt; is really the type of “deep linking” that you’ve heard about among conversations with app and web developers. Mobile deep linking functions conceptually in the same way as web deep linking. As we discussed, deep links on the web are direct links to resources “deeper” within a site’s hierarchy. Today the term has come to encompass the methodology of routing to a &lt;a href=&quot;http://www.techopedia.com/definition/27568/native-mobile-app&quot;&gt;native application&lt;/a&gt; via a hyperlink. In the &lt;a href=&quot;http://www.nngroup.com/articles/mobile-native-apps/&quot;&gt;war between web, native and hybrid applications&lt;/a&gt;, deep linking aims to make native applications more functional, more tightly integrated with the web, easier for users to operate. &lt;/p&gt;

&lt;p&gt;So, again, &lt;b&gt;a mobile deep link&lt;/b&gt; is a URI that contains all the information needed to launch directly into an app or a particular location within an app instead of just launching the app home page.&lt;/p&gt;

&lt;h4 id=&quot;deeplinking-examples&quot;&gt;Deeplinking Examples&lt;/h4&gt;

&lt;p&gt;In the case of web deep links, the underlying &lt;a href=&quot;http://www.webopedia.com/TERM/H/HTTP.html&quot;&gt;HTTP&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/Uniform_resource_locator&quot;&gt;URL&lt;/a&gt; technologies allow for deep linking by default  – which is why you pretty much never hear the term deep linking reference anything but native app links these days. Native apps, however, do not have this same underlying core technology! It requires the apps to be configured to properly handle a URI.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;In this way, as a URL is an address for a website on the internet, a URI for an app on a mobile device can function the same way IF deep linking technology is built into the app.&lt;/b&gt;&lt;/p&gt;

&lt;figure class=&quot;imageright&quot;&gt;
&lt;a href=&quot;https://branch.io/features/&quot;&gt;
&lt;img src=&quot;/images/blogs/branch/mobile-deeplinking-basics-2.png&quot; /&gt;
&lt;/a&gt;
  &lt;p style=&quot;font-style: italic; padding-top: 4%;&quot;&gt;
  Branch provides the universal links that the mobile and native app industry has wanted for years. Our links can help plug your app into the same type of deeplinking examples seen below.
  &lt;/p&gt;
&lt;/figure&gt;

&lt;p&gt;Some simple examples help demonstrate the point…&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;http://mycoolwebsite.com&lt;/code&gt; This launches a website with the respective name on the internet! &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;twitter://&lt;/code&gt; This is the iOS URI to launch Twitter’s mobile app. Depending on what follows, this could link deep into the native app with tailored and specific content. If the user doesn’t own the app it could redirect them to the app store, or to the mobile website, or prompt the user for a choice. The possibilities are endless. &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;ftp://&lt;/code&gt; This launches the protocol to initiate a file transfer.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;YouTube://&lt;/code&gt; This is the iOS URI to launch YouTube’s Mobile app.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;where-it-falls-apart&quot;&gt;Where it Falls Apart&lt;/h3&gt;

&lt;p&gt;If deeplinks are so simple and intuitive, then what’s the problem? Why aren’t deeplinks ubiquitous yet?&lt;/p&gt;

&lt;p&gt;There are a few reasons actually. First, deeplinking isn’t naturally built into the underlying framework of the native experience, like HTTP is built into the web. The only way to integrate deeplinking is through heavy lifting across all mobile platforms a developer supports (App Store, Play Store, Windows etc.) This is a huge barrier to entry for small developers hoping to have universal deeplinks into their app content.&lt;/p&gt;

&lt;p&gt;Another big problem with deeplinking is that it can’t carry data through the app install process. Deeplinks don’t provide context about the user unless they have the app already installed on their device.&lt;/p&gt;

&lt;p&gt;A simple example demonstrates the point. If I pull out my phone and search for something – let’s just say “Branch Decor pinterest” ;) – then I am immediately brought to web results from Google. Let’s assume I’m interested in finding hits on Pinterest. I navigate to the first link, which properly captures these hits. You’ll notice that now I am routed to Pinterest’s mobile site. After a few seconds a popup recommend’s that I open the Pinterest App.&lt;/p&gt;

&lt;figure class=&quot;imageright&quot; style=&quot;margin-bottom:2%&quot;&gt;
&lt;img src=&quot;/images/blogs/branch/mobile-deeplinking-basics-3.png&quot; /&gt;

  &lt;p style=&quot;font-style: italic; padding-top: 4%;&quot;&gt;
  In this example, I am eventually trying to search for &quot;Branch Decor&quot; on Pinterest. Deeplinking currently can&#39;t pass data through the app install process. This leaves issues when new users are trying to access content on the native app from the web or mobile site. 
  &lt;/p&gt;
&lt;/figure&gt;

&lt;p&gt;At this point a few things are going on. First, Pinterest wants to drive me to the native app so that I can view the content in a more seamless way on the app they’ve spent loads of resources designing for native UX. So what happens when I click on the banner popup to navigate to the native app?&lt;/p&gt;

&lt;figure class=&quot;imageright&quot;&gt;
&lt;img src=&quot;/images/blogs/branch/mobile-deeplinking-basics-4.png&quot; /&gt;

  &lt;p style=&quot;font-style: italic; padding-top: 4%;&quot;&gt;
	The first experience I have clicking on Pinterest&#39;s &quot;Open in App&quot; banner is an error message, then a slow redirect to the App Store. This is fundamentally a broken part of the way deeplinks are being deployed.
  &lt;/p&gt;
&lt;/figure&gt;

&lt;p&gt;In the current architecture of mobile, I am met with a “Cannot Open Page” error – this is because I had previously downloaded the app, so Pinterest thinks I still have the native app saved on my device. Once it realizes I don’t, it redirects me to the App Store where I am prompted to download the Pinterest App. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Okay. That’s not that big of a deal right? Well, actually, yes it is. In a world where &lt;a href=&quot;http://andrewchen.co/mobile-retention-benchmarks-for-2014-vs-2013-show-a-50-drop-in-d1-retention-guest-post/&quot;&gt;over 60% of users drop off less then 24 hours after download&lt;/a&gt; you’ve just provided the user’s first experience migrating to the native app as an error message. The old saying “First Impressions Matter” is still around for a reason. And in the world of deeplinking, this rings clearer than ever before.&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;So how does the story end?&lt;/p&gt;

&lt;figure class=&quot;imageright&quot;&gt;
&lt;img src=&quot;/images/blogs/branch/mobile-deeplinking-basics-5.png&quot; /&gt;

  &lt;p style=&quot;font-style: italic; padding-top: 4%;&quot;&gt;
	&lt;b&gt;Left:&lt;/b&gt; No Branch links are employed, so after this arduous and broken process, the user ends up logging in to Pinterest and is directed to the main homepage, wondering why they can&#39;t access the original content on which they clicked.&lt;br /&gt;
  &lt;br /&gt;
    &lt;b&gt;Right:&lt;/b&gt; Branch links are integrated. The user&#39;s data is passed through the install process. Not only did they not hit that pesky error message, but they were automatically, and quickly redirected to the correct App Store and fingerprinted for Pinterest. Now when they open up the app, they are brought right to the content they were looking for. No hacks, no gimmicks, no error messages. UX the way deeplinking intended.
  &lt;/p&gt;
&lt;/figure&gt;

&lt;p&gt;Again, unfortunately, this is a tale of two deeplinking strategies. In one world, the (Right side of the figure) I would be met with the exact content that I had originally clicked on - “Twig Branch Decor”. But in reality, this is not how deeplinks are integrated. Instead of being brought to the content I wanted, or perhaps a personalized welcome screen, I am instead brought to a non-unique home page and left guessing how to access the content I originally wanted.&lt;/p&gt;

&lt;h3 id=&quot;branch-solves-deeplinking-for-mobile&quot;&gt;Branch Solves Deeplinking for Mobile&lt;/h3&gt;

&lt;p&gt;Branch fixes all of these problems and more. It eliminates the error caused by redirecting to the native app store, it automatically and quickly passes the user and attached data through the app store, and delivers a customized UX after the user downloads the app.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;To put it lightly, Branch deep links are mobile deeplinks on steroids. Our links provide all of the benefits and functionality described at the beginning of this piece and then some: automatic detection of the native app and redirect, flawless data flow &amp;amp; deeplink through the app store installation process, personalized app welcomes, a code-less referral program, the best attribution data collection and analytics dashboard on the market, and, of course, universal deeplinks to all in-app content. &lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Our &lt;a href=&quot;https://branch.io/case-studies/&quot;&gt;case studies&lt;/a&gt; dive deeper into how Branch is delivering on the best deeplink functionality available.&lt;/p&gt;

&lt;p&gt;Branch realizes all of the potential of deeplinking technology and makes it highly accessible.  Our links were created to maximize app growth &amp;amp; provide a tailored user experience. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;More importantly, this is just the tip of the iceberg for Branch links. As a company we are focused on serving those we care about most – developers. As such, we constantly build and test new features upon request. As developers need new features, we build them. It’s just that simple.&lt;/b&gt;&lt;/p&gt;

&lt;figure class=&quot;imageleft&quot;&gt;
&lt;a href=&quot;https://branch.io/features/&quot;&gt;
&lt;img src=&quot;/images/blogs/branch/mobile-deeplinking-basics-6.png&quot; /&gt;
&lt;/a&gt;
  &lt;p style=&quot;font-style: italic; padding-top: 4%;&quot;&gt;
  HotelTonight uses Branch links to drive installs, increase conversions, and provide the best possible UX to its app users. What&#39;s stopping you from doing the same?
  &lt;/p&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;coming-full-circle-why-mobile-deep-linking-matters&quot;&gt;Coming Full Circle: Why Mobile Deep Linking Matters&lt;/h3&gt;

&lt;p&gt;The greatest benefit of mobile deep linking is the fact that it allows app developers &amp;amp; their marketing teams to bring users directly into a very specific location within the app with a dedicated link, or provide a customized welcome to the app. Deep linking can stop the trend of platforms losing their native users to the web, mobile or just in terms of straight app retention. It can automatically detect the native experience and redirect users accordingly, just as deep links have done &lt;a href=&quot;http://www.nngroup.com/articles/deep-linking-is-good-linking/&quot;&gt;for the web&lt;/a&gt;. And this is just the start. Deep linking can create a &lt;a href=&quot;http://www.appsflyer.com/deep-linking-now-time-mobile-search-ads/&quot;&gt;better native search&lt;/a&gt;, increase &lt;a href=&quot;https://developers.facebook.com/docs/ads-for-apps/mobile-app-ads-engagement&quot;&gt;ad sales&lt;/a&gt;, drive &lt;a href=&quot;http://www.superbcrew.com/branchmetrics-helps-you-get-all-the-data-need-for-your-customer-acquisition-strategy/&quot;&gt;app conversion and organic growth channels&lt;/a&gt;, and overall create a better UX.&lt;/p&gt;

&lt;p&gt;In turn, this type of technology has the potential to increase the ad market across mobile and web, better manage download traffic, bring context to the core content of an app, drive conversions, and ultimately, index all the content on an app for a more intuitive and functional search. &lt;/p&gt;

&lt;p&gt;Whether you’ve experienced the pains of app growth without deep linking or if you’ve just heard the term flung around at the lunch table, deep linking is worth knowing about and understanding. If &lt;a href=&quot;https://soundcloud.com/a16z/a16z-podcast-mobile-is-eating-the-world-and-apple-is-gobbling-fastest&quot;&gt;mobile is eating the world&lt;/a&gt; then deep linking is at the head of the table.&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Feb 2015 00:00:00 -0800</pubDate>
        <link>http://austinhay.com/branch/2015/02/18/Mobile-Deeplinking-Basics.html</link>
        <guid isPermaLink="true">http://austinhay.com/branch/2015/02/18/Mobile-Deeplinking-Basics.html</guid>
        
        <category>Mobile</category>
        
        <category>Deeplinking</category>
        
        <category>Software</category>
        
        <category>App Development</category>
        
        <category>Branch Metrics</category>
        
        
        <category>branch</category>
        
      </item>
    
      <item>
        <title>Lessons From Accenture</title>
        <description>&lt;p&gt;When I was grinding through the second year of my grad programs I had no idea what I wanted to do. Strangely enough, graduate school had actually opened the possibilities for my career trajectory rather than closed doors or pushed me into a niche field. I felt empowered to pursue science, technology, business, and programming, but I didn’t know where to start. Accenture provided me with a phenomenal launchpad to figure this out. It gave me time to discover where my technical skills aligned most with business needs, and through the months that I worked there, I discovered many of the “rules of the road” for operating at Fortune 500 companies. 
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;imageleft&quot; src=&quot;/images/blogs/lessons-from-accenture-1.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’m a huge fan of simple rules so that’s how I’m going to break down my reflections from Accenture. The concept of &lt;a href=&quot;/pdfs/Eisenhardt-StrategyAsSimpleRules.pdf&quot;&gt;simple rules&lt;/a&gt; from &lt;a href=&quot;https://profiles.stanford.edu/kathleen-eisenhardt&quot;&gt;Dr. Kathleen Eisenhardt&lt;/a&gt; is that when business gets complicated, stick to some basic guiding rules that define your strategy. I love the principle of simple rules so much that now I try to glean simple rules from all the different chapters in my life.&lt;/p&gt;

&lt;p&gt;In this case, my time at Accenture felt complicated. Everyday it seemed like I was served up new lessons, some more nuanced than others. Looking back, however, I found it hard to take away concrete operating lessons – but luckily some simple rules have proved to be clarifying.&lt;/p&gt;

&lt;h3 id=&quot;simple-rules-from-accenture&quot;&gt;Simple Rules from Accenture&lt;/h3&gt;

&lt;p&gt;&lt;b&gt;1.) It’s all about the people.&lt;/b&gt; It doesn’t get much simpler than this. Like any mega organization of its kinda, Accenture has a wide variety of people. One thing that I took away from navigating this type of ecosystem is that you have to surround yourself with the people you hope to become. Those who left the biggest impression on me were the ones that were smart, open-minded, driven, focused, thoughtful and empathetic. &lt;/p&gt;

&lt;p&gt;The best people were not just the smartest either, but they were the ones who had a deep fascination and love of learning and weren’t afraid to show it. More importantly, they left their egos at the door and were willing to recognize, cherish and nourish talent when they came across it. In the future, these are the types of people I hope to surround myself by. Life is too short to spend time with others who aren’t going to push you to develop and grow.&lt;/p&gt;

&lt;figure class=&quot;imageright-1&quot;&gt;
	&lt;a href=&quot;/personal%20development/2015/01/20/Reflections-From-SETS.html&quot;&gt;&lt;img src=&quot;/images/blogs/lessons-from-accenture-2.jpg&quot; /&gt;&lt;/a&gt;
	I visited Accenture in Bangalore on a trip to India with Stanford to study business, entrepreneurship and innovation during the summer of 2014.
&lt;/figure&gt;

&lt;p&gt;&lt;b&gt;2.) Don’t pick something that feels comfortable.&lt;/b&gt; This idea hit me early on when I started. After training for two weeks in Chicago at ACN’s center in St. Charles, IL, I came home hungry to dive into my first project. I was taken back, however, to find that few of the projects open fit my background, interests, or technical skills. Eager to learn and to grow, I found one that fit and ran with it. In hindsight this may not have been the best move for me personally, but from one perspective, I learned so much from immersing myself in a field that was uncomfortable – where I didn’t have all the answers or skills yet and where I was challenged to learn more. &lt;/p&gt;

&lt;p&gt;Instead of sitting on the bench hoping for the perfect opportunity to come along, I was swimming in a sea of analyst hurt, working my butt off, but growing from the experience. This isn’t to say this strategy is for everyone. It certainly caused some problems for me down the road when I craved a better outlet for math and analytics. But in the short run, I rapidly grew from the experience. In your career and in life, don’t be afraid to get uncomfortable. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;3.) Become a strategist AND an operator, not just one or the other.&lt;/b&gt; This is another one of those “Duh” lessons, but it really gets underlooked. When I came out of school I had travelled the road of Management Consulting. The interviews with McKinsey, Bain, BCG, the case prep from Victor Cheng, the countless hours thinking about markets, their trends, and profitability problems. Everyone wanted to be in strategy and nobody wanted to be in operations because it wasn’t sexy or fun. In reality, operations proved to be more valuable and meaningful to my professional development. &lt;/p&gt;

&lt;p&gt;Operators are those people who can take strategy and translation it into action. They are the ones with a bias for action, a hunger for process, and a mentality of “get shit done.” Strategy is fun and incredibly intellectually stimulating, but don’t let that convince you that there’s not a place in everyone’s toolbelt for operations. Be a strategist and an operator. Plan and perform. Think about tough problems and then, get your hands dirty and solve them.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;4.) Challenge the status quo – understand the impact, but don’t be afraid of it.&lt;/b&gt; This is really summed up by one simple question in the words of my greatest mentor: do you care more about &lt;a href=&quot;https://hbr.org/2010/08/true-leaders-are-also-managers/&quot;&gt;doing things right or doing the right thing?&lt;/a&gt; Not only will the answer to this question will tell you a lot about yourself, but it will paint a path to professional development. In my own life, I have always tried to be a straight-shooter and somebody who builds things for a reason. I like to know the purpose behind a process or decision and I am comfortable admitting when I’m wrong and changing things that are broken or inefficient. &lt;/p&gt;

&lt;p&gt;At a large corporation there will be many opportunities to find broken things. Good companies, good leaders, good bosses, and good people will all encourage and embrace those who call out problems with the way things are done – whether its business decisions, operations, daily processes, or even the way events are planned. But not every organization will have these people and this type of culture. A true test of professional strength and willpower will be when you decide how to handle challenging the status quo when there’s realy pushback. I’m not telling you to start a fire, but I am telling you that if you want to learn to do the right thing, this is a good place to start.&lt;/p&gt;

&lt;h3 id=&quot;wrap-up&quot;&gt;Wrap Up&lt;/h3&gt;

&lt;p&gt;At the end of the day Accenture was a great place to start my career and I am unbelievably thankful to the people and mentors that encouraged me and helped me succeed. The most important part of this whole process has been reflection. Taking the time to think about the things that went well and those that didn’t has given me insight into my day-to-day professional needs as well as the areas that I have room for personal improvement. &lt;/p&gt;

&lt;p&gt;If I can recommend only one thing for those moving on to new careers it is that you take the time to digest the greatest lessons from your employer. Think about them, reflect, write them down and internalize them. When life gets complicated, keep things simple. &lt;/p&gt;
</description>
        <pubDate>Sun, 15 Feb 2015 00:00:00 -0800</pubDate>
        <link>http://austinhay.com/personal%20development/2015/02/15/Lessons-From-Accenture.html</link>
        <guid isPermaLink="true">http://austinhay.com/personal%20development/2015/02/15/Lessons-From-Accenture.html</guid>
        
        <category>Reflection</category>
        
        <category>Accenture</category>
        
        <category>Awareness</category>
        
        <category>Self development</category>
        
        <category>Life lessons</category>
        
        
        <category>personal development</category>
        
      </item>
    
      <item>
        <title>A Wild Ride</title>
        <description>&lt;p&gt;It’s rare that you wake up wondering to yourself…“Was that all a dream?” The week has certainly felt that way. I learned about &lt;a href=&quot;https://branch.io/&quot;&gt;Branch Metrics&lt;/a&gt; less than three weeks ago. Their product, a simple drop in SDK that finally lets app developers track, monitor and manage their users using deep linking, is going to disrupt the mobile industry. It wasn’t just their technology that took my breath away, their team of founders is one of the most thoughtful and inspiring groups of people I have ever met. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://branch.io&quot;&gt;&lt;img class=&quot;imageleft-1&quot; src=&quot;/images/blogs/wild-ride-1.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In grad school at Stanford I took a number of business classes where I learned the importance in surrounding yourself by the brightest and best people you can find. The goal in achieving professional success and happiness was about doing something you’re passionate about and diving in with people who are going to challenge you and make you a better person. I absolutely found these types of great people and a real opportunity to grow at &lt;a href=&quot;http://branch.io&quot;&gt;Branch&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;The added bonus of the opportunity to work for Branch is the fact that I’m going to be in a role that will truly utilize my skills and will help me grow both my business acumen and technical abilities. With a small team of 12, Branch is growing rapdily in the next few months and needs people who can manage several domains of expertise, who are comfortable with sales and business intelligence, but also who aren’t afraid of code. They need people who are willing to take risks, use data to drive business decisions, possibly &lt;a href=&quot;http://www.quora.com/Am-I-set-up-for-slower-growth-if-more-experienced-execs-are-hired-above-me-at-fast-growing-company/answer/Auren-Hoffman?ref=fb&quot;&gt;fail&lt;/a&gt; along the way, but ultimately grow from the experience. More specifically, they want somebody with a technical background, business understanding, and a love of technology. When I heard this I felt it was a match made in heaven, and I couldn’t have been more excited to join.&lt;/p&gt;

&lt;p&gt;If all this wasn’t enough to convince me, their co-founder CEO, Alex Austin  – yes, it is comically fitting that we have inverse names – left me with one honest promise: A wild ride. &lt;/p&gt;

&lt;p&gt;I’ve decided to join the team at Branch Metrics in Palo Alto, and close my chapter at Accenture. Check out their &lt;a href=&quot;https://branch.io/contextual-deep-links/&quot;&gt;product&lt;/a&gt;, which I also write about more in the future. I hope you will follow &amp;amp; support me in this exciting new journey!&lt;/p&gt;
</description>
        <pubDate>Thu, 12 Feb 2015 00:00:00 -0800</pubDate>
        <link>http://austinhay.com/personal%20development/2015/02/12/A-Wild-Ride.html</link>
        <guid isPermaLink="true">http://austinhay.com/personal%20development/2015/02/12/A-Wild-Ride.html</guid>
        
        <category>Branch Metrics</category>
        
        <category>Professional Development</category>
        
        <category>Reflection</category>
        
        <category>Self development</category>
        
        
        <category>personal development</category>
        
      </item>
    
      <item>
        <title>What is Deep Linking?</title>
        <description>&lt;p&gt;Deep linking has been one of the most talked about trends in tech throughout the last year, but not everyone fully understands what it is and how it can transform mobile. Look no further – this is a quick guide on what you need to know about mobile deep linking.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;the-current-landscape&quot;&gt;The Current Landscape&lt;/h3&gt;

&lt;iframe style=&quot;float: right; margin: 2%; padding-right: 3%; margin-top: 0;&quot; width=&quot;35%&quot; height=&quot;auto&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/188674648&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&amp;amp;visual=true&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;First, it’s best to start with the current landscape. Mobile is taking over, and deep linking is &lt;a href=&quot;http://readwrite.com/2015/01/29/deep-linking-button-urx-sdk-now-hot&quot;&gt;heating up&lt;/a&gt; alongside as it promises to revolutionize UX and the way in which apps deliver content to users. &lt;/p&gt;

&lt;p&gt;Most stories focus on the promise of deep linking to provide HTTP-like functionality for mobile apps (more on this below!). Meanwhile, companies are rapidly materializing to deliver on this potential: &lt;a href=&quot;http://branch.io&quot;&gt;Branch&lt;/a&gt;, &lt;a href=&quot;http://www.urx.com&quot;&gt;URX&lt;/a&gt;, &lt;a href=&quot;http://www.trywildcard.com/&quot;&gt;Wildcard&lt;/a&gt;, &lt;a href=&quot;http://www.usebutton.com/&quot;&gt;Button&lt;/a&gt;, and &lt;a href=&quot;https://deeplink.me/&quot;&gt;Deeplink.me&lt;/a&gt; to name a few. These new marketing and developer-centric startups are all chasing the future of how &lt;a href=&quot;http://www.huffingtonpost.com/nathaniel-cahners-hindman/a-deep-link-deep-dive-urx-wildcard-button-deeplinkme-demo-the-future-of-mobile_b_6449214.html&quot;&gt;deeplinks will define the future app ecosytem and user experience&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;What really are the benefits of deep linking? The technology helps app developers, marketers and users in a number of ways. Specifically, deep linking can:&lt;/p&gt;

&lt;figure class=&quot;imageleft-1&quot;&gt;
	&lt;a href=&quot;http://branch.io&quot;&gt;&lt;img src=&quot;/images/blogs/what-is-deep-linking-1.png&quot; /&gt;&lt;/a&gt;
	Branch Metrics is one deep linking startup that is delivering on the promises of the technology. They&#39;ve built a custom SDK and API that provides a way for developers to easily integrate deep linking into their core app, and build robust referral &amp;amp; conversion platforms. 
&lt;/figure&gt;

&lt;p&gt;1.) Drive app install and conversion - &lt;a href=&quot;http://branch.io&quot;&gt;Branch&lt;/a&gt;, &lt;a href=&quot;http://www.urx.com&quot;&gt;URX&lt;/a&gt;, &lt;a href=&quot;http://www.usebutton.com/&quot;&gt;Button&lt;/a&gt;, &lt;a href=&quot;https://deeplink.me/&quot;&gt;Deeplink.me&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2.) Track organic growth channels, understand ad campaign impact on app numbers, and analyze K factors - only &lt;a href=&quot;http://branch.io&quot;&gt;Branch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.) Supply dedicated user information &lt;u&gt;between&lt;/u&gt; web/mobile and &lt;u&gt;through&lt;/u&gt; app install. This includes actions between apps from users - only &lt;a href=&quot;http://branch.io&quot;&gt;Branch&lt;/a&gt;, but most deep linking vendors provide UX connectivity for between-app interactions, like &lt;a href=&quot;http://www.urx.com&quot;&gt;URX&lt;/a&gt;, &lt;a href=&quot;http://www.usebutton.com/&quot;&gt;Button&lt;/a&gt;, &lt;a href=&quot;http://www.trywildcard.com/&quot;&gt;Wildcard&lt;/a&gt;, &lt;a href=&quot;https://deeplink.me/&quot;&gt;Deeplink.me&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.) Linking analygous to HTTP providing a seamless way to interact with apps from links - &lt;a href=&quot;http://branch.io&quot;&gt;Branch&lt;/a&gt;, &lt;a href=&quot;http://www.urx.com&quot;&gt;URX&lt;/a&gt;, &lt;a href=&quot;http://www.trywildcard.com/&quot;&gt;Wildcard&lt;/a&gt;, &lt;a href=&quot;http://www.usebutton.com/&quot;&gt;Button&lt;/a&gt;, &lt;a href=&quot;https://deeplink.me/&quot;&gt;Deeplink.me&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5.) Allow mobile apps to work together, intuitively streamlining the process for developers - all of them!&lt;/p&gt;

&lt;p&gt;&lt;b&gt;This last point is the most salient one: deep linking can allow your apps to have more exposure, higher installs and conversions, but most importantly, an easier, more intuitive integration with the mobile app ecosystem.&lt;/b&gt;&lt;/p&gt;

&lt;h3 id=&quot;what-is-a-deep-link&quot;&gt;What is a Deep Link?&lt;/h3&gt;

&lt;p&gt;The good thing about the internet is that there are many great resources that already exist on this subject. I’m in favor of you reading mine, but if it doesn’t quite suit your fancy, I’d recommend checking out &lt;a href=&quot;http://sarlitt.me/what-is-app-deep-linking/&quot;&gt;this other great read&lt;/a&gt; on Deep Linking.&lt;/p&gt;

&lt;p&gt;Now that we’ve covered the landscape of deep linking and you have an idea of the technology’s benefits, it’s time to dive into how it works – beginning with URIs.&lt;/p&gt;

&lt;h4 id=&quot;uris-are-the-foundation-of-deep-linking&quot;&gt;URI’s are the Foundation of Deep Linking&lt;/h4&gt;

&lt;p&gt;In programming, a URI (Uniform Resource Identifier) is just a string of characters to identify the name of a resource on a network. URIs allows users to identify and interact with the resource representation over a network using specific protocols. &lt;b&gt;The most common URI out there is the URL, a &lt;a href=&quot;http://en.wikipedia.org/wiki/Uniform_resource_locator&quot;&gt;Uniform Resource Locator&lt;/a&gt; – or more simply, a web address.&lt;/b&gt; URIs are not not limited to just this. URIs can also be comprised of URNs (Uniform Resource Name). In practice a URN functions as a web resource’s “name” while the URL functions as its address. If you’re not sold on their differences, take a look &lt;a href=&quot;http://stackoverflow.com/questions/176264/whats-the-difference-between-a-uri-and-a-url&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;figure class=&quot;imageleft&quot;&gt;
	&lt;a href=&quot;http://sarlitt.me/what-is-app-deep-linking/&quot;&gt;&lt;img src=&quot;/images/blogs/what-is-deep-linking-2.png&quot; /&gt;&lt;/a&gt;
	This simple visual from Michael Sarlitt shows the primary differences between web and native apps. Check out his full post for a developer focused intro to deep linking. 
&lt;/figure&gt;

&lt;p&gt;At a very high level a deep link is just a hyperlink, or a special URI that routes to a resource deeper within a site’s hierarchy. It’s a hyperlink to an indexed or searchable page on a website other than the site’s home page. Generally, a website home page is at the top page in a site’s hierarchy and any other page outside of that is considered a “deep” link. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mobiledeeplinking.org/&quot;&gt;Mobile deep linking&lt;/a&gt; is really the type of “deep linking” that you’ve heard about among conversations with app and web developers. Mobile deep liking functions conceptually in the same way as web deep linking. As we discussed, deep links on the web are direct links to resources “deeper” within a site’s hierarchy. Today the term has come to encompass the methodology of routing to a &lt;a href=&quot;http://www.techopedia.com/definition/27568/native-mobile-app&quot;&gt;native application&lt;/a&gt; via a hyperlink. In the &lt;a href=&quot;http://www.nngroup.com/articles/mobile-native-apps/&quot;&gt;war between web, native and hybrid applications&lt;/a&gt;, deep linking aims to make native applications more functional, more tightly integrated with the web, easier for users to operate. &lt;/p&gt;

&lt;p&gt;So, again, &lt;b&gt;a mobile deep link is just a URI that contains all the information needed to launch directly into an app or a particular location within an app instead of just launching the app home page.&lt;/b&gt;&lt;/p&gt;

&lt;h4 id=&quot;examples-of-deep-links&quot;&gt;Examples of Deep Links&lt;/h4&gt;

&lt;p&gt;In the case of web deep links, the underlying &lt;a href=&quot;http://www.webopedia.com/TERM/H/HTTP.html&quot;&gt;HTTP&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/Uniform_resource_locator&quot;&gt;URL&lt;/a&gt; technologies allow for deep linking by default  – which is why you pretty much never hear the term deep linking reference anything but native app links these days. Native mobile apps, however, do not have this same underlying core technology! It requires the apps to be configured to properly handle a URI.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;In this way, as a URL is an address for a website on the internet, a URI for an app on a mobile device can function the same way IF deep linking technology is built into the app.&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Some simple examples help demonstrate the point…&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;http://mycoolwebsite.com&lt;/code&gt; This launches a website with the respective name on the internet! &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;twitter://&lt;/code&gt; This is the iOS URI to launch Twitter’s mobile app. Depending on what follows, this could link deep into the native app with tailored and specific content. If the user doesn’t own the app it could redirect them to the app store, or to the mobile website, or prompt the user for a choice. The possibilities are endless. &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;ftp://&lt;/code&gt; This launches the protocol to initiate a file transfer&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;YouTube://&lt;/code&gt; This is the iOS URI to launch YouTube’s Mobile app&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;imageright&quot;&gt;
	&lt;a href=&quot;http://sarlitt.me/what-is-app-deep-linking/&quot;&gt;&lt;img src=&quot;/images/blogs/what-is-deep-linking-3.png&quot; /&gt;&lt;/a&gt;
	This is another awesome visual from Michael Sarlitt showing how deep links can redirect users to highly specific in-app content from any ad, but especially mobile and web ads. Check out his post on deeplinking for a more developer-focused overview. If you&#39;re interested in implementing this type of behavior check out the options up top. Currently &lt;a href=&quot;http://branch.io&quot;&gt;Branch Metrics&lt;/a&gt; seems like the best option to handle this type of action and they pass data through install as well, which opens up a whole world of possibilities for UX.
&lt;/figure&gt;

&lt;p&gt;Hopefully deep linking is starting to become more clear!&lt;/p&gt;

&lt;h3 id=&quot;back-to-the-point-why-mobile-deep-linking-matters&quot;&gt;Back to the Point: Why Mobile Deep Linking Matters&lt;/h3&gt;

&lt;p&gt;The greatest benefit of mobile deep linking is the fact that it allows app developers &amp;amp; their marketing teams to bring users directly into a very specific location within the app with a dedicated link. Deep linking can stop the trend of platforms losing their mobile users to the web. It can automatically detect the native experience and redirect users accordingly, just as deep links have done &lt;a href=&quot;http://www.nngroup.com/articles/deep-linking-is-good-linking/&quot;&gt;for the web&lt;/a&gt;. And this is just the start. Deep linking can create a &lt;a href=&quot;http://www.appsflyer.com/deep-linking-now-time-mobile-search-ads/&quot;&gt;better native search&lt;/a&gt;, increase &lt;a href=&quot;https://developers.facebook.com/docs/ads-for-apps/mobile-app-ads-engagement&quot;&gt;ad sales&lt;/a&gt;, drive &lt;a href=&quot;http://www.superbcrew.com/branchmetrics-helps-you-get-all-the-data-need-for-your-customer-acquisition-strategy/&quot;&gt;app conversion and organic growth channels&lt;/a&gt;, and overall create a better UX.&lt;/p&gt;

&lt;p&gt;In turn this type of technology has the potential to increase the ad market across mobile and web, better manage download traffic, bring context to the core content of an app, drive conversions, and ultimately, index all the content on an app for a more intuitive and functional search. &lt;/p&gt;

&lt;p&gt;Whether you’ve experienced the pains of app growth without deep linking or if you’ve just heard the term flung around at the lunch table, deep linking is worth knowing about and understanding. If &lt;a href=&quot;https://soundcloud.com/a16z/a16z-podcast-mobile-is-eating-the-world-and-apple-is-gobbling-fastest&quot;&gt;mobile is eating the world&lt;/a&gt; then deep linking is at the head of the table.&lt;/p&gt;
</description>
        <pubDate>Fri, 06 Feb 2015 00:00:00 -0800</pubDate>
        <link>http://austinhay.com/coding/2015/02/06/What-is-Deep-Linking.html</link>
        <guid isPermaLink="true">http://austinhay.com/coding/2015/02/06/What-is-Deep-Linking.html</guid>
        
        <category>Deep Linking</category>
        
        <category>Software</category>
        
        <category>Web-development</category>
        
        <category>Technology</category>
        
        
        <category>coding</category>
        
      </item>
    
      <item>
        <title>Creating Ruby GEMs</title>
        <description>&lt;p&gt;Every beginner Ruby developer learns the command &lt;code&gt;gem install&lt;/code&gt; early in their career, but it doesn’t take long for most to wonder what’s going on under the hood. As I’ve started to deepen my understanding of Ruby as a programming language, I’ve also become more enamored by Ruby Gems. Following this interest, I jumped into my local Gem environment and tried to make my own.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;what-are-ruby-gems&quot;&gt;What Are Ruby Gems?&lt;/h3&gt;

&lt;p&gt;&lt;img class=&quot;imageright&quot; src=&quot;/images/blogs/rubygems-1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For those unfamiliar with Ruby, I can start by defining Gems. A Ruby Gem is simply a &lt;a href=&quot;http://en.wikipedia.org/wiki/Package_manager&quot;&gt;package manager&lt;/a&gt; that provides three main purposes:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;A standard format for distributing Ruby libraries, programs and scripts. &lt;/li&gt;
  &lt;li&gt;A tool that helps manage library installation.&lt;/li&gt;
  &lt;li&gt;A server for distributing these libraries.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, simply put, Ruby Gems are plugin software packages that contain Ruby applications and/or libraries. Gems are a fundamental part of Ruby programming because they extend and manipulate the feature set and full functionality of Ruby applications. Most commonly, Gems are used to implement re-usable features and prevent developers from having to reinvent the wheel. &lt;/p&gt;

&lt;p&gt;This is really how it works with all code libraries. In the past, when you built an incredible script or application that completed some task you might save it for your own purposes to use in all your applications. Over time, thousands of programmers have done this, sharing their work with the world – in this case via Gems using the &lt;a href=&quot;http://guides.rubygems.org/&quot;&gt;RubyGems&lt;/a&gt; software package manager – so that instead of having to go solve every nuanced programming problem they come across, they can plug into the work of others and focus more attention on building the application at hand.&lt;/p&gt;

&lt;h3 id=&quot;how-do-gems-work&quot;&gt;How do Gems Work?&lt;/h3&gt;

&lt;p&gt;At a high level the command &lt;code&gt;gem&lt;/code&gt; is what allows you to work with Ruby Gems from your &lt;a href=&quot;http://cli.learncodethehardway.org/book/&quot;&gt;command line&lt;/a&gt;. If it’s your first time getting started with Ruby (version &amp;gt; 1.9) you will have the RubyGems commands built in, but if not, you can always &lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;download&lt;/a&gt; and run the installer from RubyGems.org.&lt;/p&gt;

&lt;p&gt;RubyGems.org provides the best resources avaiable for using and working with Ruby Gems – this shouldn’t be surprising! &lt;/p&gt;

&lt;p&gt;What are some of the cool commands you can run from terminal when working with GEMs?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;gem install [ Gem library Name ]&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;gem search [ Gem library Name ]&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;irb -rpp&lt;/code&gt;: Requires a library when irb loads!&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;gem list&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;gem uninstall [ Gem library name ]&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;ri [ Gem library name ]&lt;/code&gt;: View the documentation of the requested Gem.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;gem server&lt;/code&gt;: Lets you view the documentation for your installed Gems using a local host.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;gem fetch [ Gem library name ]&lt;/code&gt;: Let’s you audit a Gem’s contents without downloading it&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;gem unpack [ Gem library name ]&lt;/code&gt;: After fetching, you can extract the contents from the &lt;code&gt;.gem&lt;/code&gt; file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This list serves as a launchpad. There are loads of other awesome &lt;a href=&quot;http://guides.rubygems.org/command-reference/&quot;&gt;Gem commands&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://guides.rubygems.org/command-reference/&quot;&gt;&lt;img src=&quot;/images/blogs/rubygems-2.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that you have an understanding of ruby Gems and how to work with them, it’s time to turn our attention to the main argument – how to &lt;b&gt;build&lt;/b&gt; Ruby Gems.&lt;/p&gt;

&lt;h3 id=&quot;building-your-own-gem&quot;&gt;Building Your Own Gem&lt;/h3&gt;

&lt;p&gt;The process is actually quite simple. First I recommend checking out these two resources:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://guides.rubygems.org/make-your-own-gem/&quot;&gt;Make Your Own Gem&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://quickleft.com/blog/engineering-lunch-series-step-by-step-guide-to-building-your-first-ruby-gem/&quot;&gt; Step-by-Step Guide to Building Gems &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Installing is easiest using &lt;code&gt;bundle&lt;/code&gt; as explained in the Step by Step guide. It works like this…&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gem install bundle
$ bundle gem [ Your Gem name ]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You don’t necessarily have to run bundle in order to create a Gem. You could also use built in Gem commands. First, navigate to where you want to build your Gem in CL. Create a &lt;code&gt;.gemspec&lt;/code&gt; file using the required syntax and nomenclature. Confused? Here’s an &lt;a href=&quot;http://guides.rubygems.org/specification-reference/&quot;&gt;example&lt;/a&gt;. And if that’s not enough, here’s one of my .gemspec files so that you understand what it might look like.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;imageright&quot; src=&quot;/images/blogs/rubygems-3.png&quot; href=&quot;http://guides.rubygems.org/command-reference/&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now that you’ve made your &lt;code&gt;.gemspec&lt;/code&gt; file you can run &lt;code&gt;gem build [ Your gem name].gemspec&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The Gem will automatically get built for you with all the correct directories, subdirectories and required files.&lt;/p&gt;

&lt;p&gt;Similarly, you could just start from scratch by navigating to the directory where you want to build your Gem and creating the following files / sub-directories.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Subdirectories:&lt;/b&gt;
&lt;code&gt;lib&lt;/code&gt;
&lt;code&gt;spec&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Files:&lt;/b&gt;
&lt;code&gt;.gitignore&lt;/code&gt;
&lt;code&gt;.travis.yml&lt;/code&gt;
&lt;code&gt;[ GEM NAME ].gemspec&lt;/code&gt;
&lt;code&gt;Gemfile&lt;/code&gt;
&lt;code&gt;LICENSE.txt&lt;/code&gt;
&lt;code&gt;Rakefile&lt;/code&gt;
&lt;code&gt;README.md&lt;/code&gt;
&lt;code&gt;GEMLOCK&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;gem-visualization&quot;&gt;Gem Visualization&lt;/h4&gt;

&lt;p&gt;The above list serves as the architecture for your Gem, but you still might be wondering what the tree structure of a Gem looks like. If you ran the previous &lt;code&gt;bundle&lt;/code&gt; commands (or built it yourself) and named your Gem “freewill”, per &lt;a href=&quot;http://guides.rubygems.org/what-is-a-gem/&quot;&gt;this example&lt;/a&gt;, this is what you would have created automatically. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blogs/rubygems-4.png&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;building-with-test-driven-development&quot;&gt;Building with Test Driven Development&lt;/h4&gt;

&lt;p&gt;From this point you will want to build your Gem using &lt;a href=&quot;http://en.wikipedia.org/wiki/Test-driven_development&quot;&gt;Test-Driven Development&lt;/a&gt; (TDD). Most people use &lt;a href=&quot;http://rspec.info/&quot;&gt;RSpec&lt;/a&gt; to do so. In TTD you’ll want to first add rspec to your Gem:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Gem:Specification.new do |spec|
   spec.add_development_dependency &#39;rspec&#39;
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you can create a &lt;code&gt;spec&lt;/code&gt; sub-directory within your Gem home directory. And add &lt;code&gt;spec&lt;/code&gt; helper and Gem test files. Here’s an example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir spec
$ cd spec
$ touch [ Gem Name ]_spec.rb
$ touch spec_helper.rb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using TTD and Rspec is outside of the scope of this article, but you you can add all your tests into these newly created ruby files. Learn more about that &lt;a href=&quot;http://rspec.info/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;deploying-your-gem&quot;&gt;Deploying Your Gem&lt;/h3&gt;

&lt;p&gt;After many hours of building your awesome Gem you’ll probably get to the point where you’re interested in publishing. The &lt;a href=&quot;http://guides.rubygems.org/publishing/&quot;&gt;process&lt;/a&gt; is also very simple. &lt;/p&gt;

&lt;p&gt;The best and easiest way to spread the gospel of your Gem to other Ruby developers (and easily use it in all your projects with a simple &lt;code&gt;gem install&lt;/code&gt; command…) is to publish to &lt;a href=&quot;http://www.rubygems.org&quot;&gt;RubyGems.org&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://rubygems.org/sign_up&quot;&gt;Signup&lt;/a&gt; on their website and then push your Gem:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gem push [ Your Gem ].gem
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will be prompted for login information, but RubyGems will save your credentials to &lt;code&gt;~/.gem/credentials&lt;/code&gt; from the command line so that you won’t have to do it everytime you push.&lt;/p&gt;

&lt;h3 id=&quot;wrap-up&quot;&gt;Wrap Up&lt;/h3&gt;

&lt;p&gt;In short, Ruby Gems are a fundamental aspect of coding in Ruby. It doesn’t take much time to start implementing them in your &lt;code&gt;.rb&lt;/code&gt; files with the &lt;code&gt;require&lt;/code&gt; tag, but creating your own Gem is a bit complicated. Hopefully this short intro gives you a first look and provides the resources needed to dive further.&lt;/p&gt;

&lt;p&gt;If you have more time, I highly recommend learning to build Ruby Gems by exploring those Gems that have already been created. You can do this by navigating to the directory where your Gems are stored. Use the following in CL:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gem environment
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using your favorite text editor, open up some existing Gems – or Gems that you use frequently – and see how they are built. Compare the architecture you see there to the one I’ve described. Go one step further and see how their tests are established and how their primary &lt;code&gt;.rb&lt;/code&gt; file works. You will learn an extraordinary amount by immersing yourself in existing Gems! Happy coding!&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Feb 2015 00:00:00 -0800</pubDate>
        <link>http://austinhay.com/coding/2015/02/01/Creating-GEMs.html</link>
        <guid isPermaLink="true">http://austinhay.com/coding/2015/02/01/Creating-GEMs.html</guid>
        
        <category>Ruby</category>
        
        <category>GEM</category>
        
        <category>Software</category>
        
        <category>Web-development</category>
        
        
        <category>coding</category>
        
      </item>
    
  </channel>
</rss>
