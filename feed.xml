<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Austin A. Hay</title>
    <description>AustinHay.com is a millenial blog &amp; consulting stop focused on strategy, leadership, self-developement, entrepreneurship, and rookie programming. Don&#39;t be a stranger - drop me an email to connect. Contents and code &amp;copy; 2015</description>
    <link>http://www.austinhay.com/</link>
    <atom:link href="http://www.austinhay.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 16 Jan 2015 10:18:40 -0800</pubDate>
    <lastBuildDate>Fri, 16 Jan 2015 10:18:40 -0800</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Entrepreneurs, Becoming Entrepreneurial, and Resources to Get You Started</title>
        <description>&lt;p&gt;&lt;span class=&quot;category-tag-icon&quot;&gt;entrepreneurship&lt;/span&gt;&lt;span class=&quot;category-tag-icon&quot;&gt;self-development&lt;/span&gt;&lt;span class=&quot;category-tag-icon&quot;&gt;strategy&lt;/span&gt;&lt;span class=&quot;category-tag-icon&quot;&gt;leadership&lt;/span&gt;&lt;span class=&quot;category-tag-icon&quot;&gt;good reads&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;post-meta&quot;&gt;By: Austin Hay&lt;/span&gt;
&lt;br /&gt;
&lt;span class=&quot;post-meta&quot;&gt;Published: Jan 14, 2015&lt;/span&gt;&lt;/p&gt;

&lt;h4&gt;&lt;b&gt;I am not an entrepreneur.&lt;/b&gt;&lt;/h4&gt;

&lt;p&gt;I think the word, at one point in the past, had a unique and meaningful place in the language of US business jargon. But now it’s become too out of touch with what it was intended to represent.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Entrepreneurs were those contrarian individuals with grit, determination, clever ideas, and a wacky sense of world paradigms that allowed them to create new, interesting, and risky initiatives that drove measurable change.&lt;/b&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;I think &lt;a href=&quot;http://www.bhorowitz.com/&quot;&gt;Ben Horowitz&lt;/a&gt; does a good job of defining the scope of a real entrepeneur. Read “&lt;a href=&quot;http://techcrunch.com/2014/03/03/the-hard-thing-about-hard-things-ben-horowitzs-honest-and-real-take-on-entrepreneurship/&quot;&gt;The Hard Thing About Hard Things&lt;/a&gt;” to understand his perspective. I agree that if you haven’t woken up in the night with a cold sweat worrying about the fudiciary responsibility owed to your &lt;a href=&quot;https://about.usc.edu/presidentemeritus/contrarians-guide-to-leadership/&quot;&gt;lieutenants&lt;/a&gt; then you probably can’t claim ownership of the word. This is why I am not an entrepreneur – although, one day with a bit of luck and boatload of hard work, I hope to be distinguished enough to reach that pinnacle of impact.&lt;/p&gt;

&lt;p&gt;That’s not to say there still aren’t a lot of awesome entrepreneurs out there, but the world of technology and computing has led every smart 20+ year old with a knack for app development, or every business major with a creative idea to claim the title and set off on a destruction course. Are you shocked? &lt;a href=&quot;http://www.nytimes.com/2014/03/16/magazine/silicon-valleys-youth-problem.html&quot;&gt;You shouldn’t be&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.entrepreneursforachange.com/10-stupid-business-ideas-that-made-millions/&quot;&gt;Having a cool idea&lt;/a&gt; doesn’t make you an entrepreneur. Failing doesn’t &lt;a href=&quot;http://www.nytimes.com/2014/11/09/business/wearing-your-failures-on-your-sleeve.html&quot;&gt;always&lt;/a&gt; make you an entrepreneur – but I agree failure is a stepping-stone to success, happiness, and growth! Raising money from hungry VCs also doesn’t make you an entrepreneur. &lt;b&gt;But there are plenty of things in the world that make you entrpreneurial.&lt;/b&gt; &lt;/p&gt;

&lt;p&gt;What most people don’t understand or realize is that the qualities that make entrepreneurs great should be separated from the word that has now become vastly over-used. This is one of the great lessons I took away from &lt;a href=&quot;https://profiles.stanford.edu/thomas-byers&quot;&gt;Tom Byers&lt;/a&gt; and his legendary course on “&lt;a href=&quot;http://stvp.stanford.edu/about/&quot;&gt;Entrepreneurial Finance &amp;amp; Management&lt;/a&gt;”.&lt;/p&gt;

&lt;p&gt;So, what does it mean to be entrepreneurial? I am not in a position of supreme authority to shed much light, but I do have an opinion that I believe in: true entrepreneurship and genuine, authentic, classical leadership are inherently tied together. &lt;/p&gt;

&lt;h4&gt;&lt;b&gt;&lt;i&gt;Entrepreneurs, and great leaders, know what matters most. They understand people, demonstrate empathy, exude charisma, encourage feedback &amp;amp; optimism, and are devoted to both their own self-development and the development of others.&lt;/i&gt;&lt;/b&gt;&lt;/h4&gt;

&lt;p&gt;They reflect, improve, fail, and repeat the process in an effort to become better people – which in turns allows them to better lead those they serve,… and, surprisingly enough, lead better companies. And that’s a key distinction that can’t be forgotten.&lt;/p&gt;

&lt;p&gt;Good leaders recognize that they are acting as servants and stewards to others. Similarly, good entrepreneurs – real entrepreneurs – are “in it” for the impact. This isn’t always the case, but it should be; among &lt;a href=&quot;http://www.forbes.com/sites/bruceupbin/2012/09/18/talking-philanthropy-with-marc-benioff/&quot;&gt;the entrepreneurs I admire the most&lt;/a&gt;, it most certainly is true. &lt;/p&gt;

&lt;p&gt;Beyond the soft contours of entrepreneurship that I have described, there is also a technical skillset that begets those who practice entrepreneurship. In my mind, this isn’t just software development or computer science. You don’t have to be a coder or programmer, but analytical prowess and a fascination with math, science, finance, businessn, strategy, and product development are certainly some popular pillars. &lt;/p&gt;

&lt;p&gt;If you’re like me, you’re probably thinking, “this is great and all, but so what?” Not everyone has time to dedicate themselves to the study of these diverse fields, and even if you did, just starting can be complicated and stressful. &lt;/p&gt;

&lt;p&gt;The “so what” is that anyone – you, me, your younger sister, your older manager, she, he, or them – &lt;b&gt;anyone&lt;/b&gt; can become more entrepreneurial, can practice entrepreneurship and therein become a better leader and person. Like most things in life, all it takes is committing to learning and growing. Boom: &lt;a href=&quot;http://www.nytimes.com/2008/07/06/business/06unbox.html&quot;&gt;Growth Mindset 101&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There you have it. From my point of view, that’s really the power of entrepreneurship. And to get you started, I’ve assembled a list of my favorite reads on just this. Many kudos to the mentors &amp;amp; advisors who have helped me with these wonderful resources.&lt;/p&gt;

&lt;h4&gt;&lt;b&gt;The Resources to Get Started: Entrepreneurship Good Reads&lt;/b&gt;&lt;/h4&gt;

&lt;p&gt;The list(s) below capture some of the best thoughts from awesome leaders, entrepreneurs, VCs, creators, developers, educators, and others. This doesn’t capture even a fraction of the great content out there, so keep scouring the world and send me recommendations! Look at this as a starting point – a launchpad to help you become more entrepreneurial. &lt;/p&gt;

&lt;h4&gt; Blogs: &lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://bhorowitz.com/&quot;&gt;http://bhorowitz.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://andreessenhorowitz.com&quot;&gt;http://andreessenhorowitz.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://steveblank.com/&quot;&gt;http://steveblank.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.venturehacks.com/&quot;&gt;http://www.venturehacks.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.avc.com/&quot;&gt;http://www.avc.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.bothsidesofthetable.com/&quot;&gt;http://www.bothsidesofthetable.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://startuplessonslearned.blogspot.com&quot;&gt;http://startuplessonslearned.blogspot.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://redeye.firstround.com/&quot;&gt;http://redeye.firstround.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.forentrepreneurs.com/&quot;&gt;http://www.forentrepreneurs.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;ttp://www.cbinsights.com/research­reports/Silicon­Valley­Venture­Capital­Almanac.pdf&quot;&gt;http://www.cbinsights.com/research­reports/Silicon­Valley­Venture­Capital­Almanac.pdf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://onstartups.com/&quot;&gt;http://onstartups.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.paulgraham.com/&quot;&gt;http://www.paulgraham.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.askthevc.com&quot;&gt;http://www.askthevc.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.feld.com&quot;&gt;http://www.feld.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.trevorloy.com&quot;&gt;http://www.trevorloy.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Also, generally &lt;a href=&quot;http://www.fastcompany.com/&quot;&gt;FastCompany&lt;/a&gt; &amp;amp; &lt;a href=&quot;http://techcrunch.com/&quot;&gt;TechCrunch&lt;/a&gt; can be INCREDIBLE places to learn.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt; Books &amp;amp; Articles:&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://techcrunch.com/2014/03/03/the-hard-thing-about-hard-things-ben-horowitzs-honest-and-real-take-on-entrepreneurship/&quot;&gt;The Hard Thing About Hard things&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;“&lt;a href=&quot;&quot;&gt;How Will You Measure Your Life?&lt;/a&gt;” by Clayton Christensen&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://about.usc.edu/presidentemeritus/contrarians-guide-to-leadership/&quot;&gt;Contrarian’s Guide to Leadership&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.fastcompany.com/1786824/leadership-hall-fame-warren-bennis-author-becoming-leader&quot;&gt;On Becoming a Leader&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.forbes.com/sites/keldjensen/2013/02/05/why-negotiators-still-arent-getting-to-yes/&quot;&gt;Getting to Yes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.amazon.com/Difficult-Conversations-Discuss-What-Matters/dp/0143118447&quot;&gt;Difficult Conversations&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;“&lt;a href=&quot;http://www.ft.com/cms/s/0/86d97610-00ab-11df-ae8d-00144feabdc0.html#axzz3OxWR4tBz&quot;&gt;‘Airline pilot’ protocols in finance&lt;/a&gt;” by Atul Gawande&lt;/li&gt;
  &lt;li&gt;“&lt;a href=&quot;http://www.claytonchristensen.com/books/the-innovators-dilemma/&quot;&gt;The Innovator’s Dilemma&lt;/a&gt;” by Clayton Christensen&lt;/li&gt;
  &lt;li&gt;“An Introduction to Stocks and Options for the Tech Entrepreneur or Employee” by David Weekly&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nymag.com/daily/intelligencer/2014/10/marc-andreessen-in-conversation.html&quot;&gt;On Optimism&lt;/a&gt; by Marc Andreessen… there are so many other great reads on Optimism though! Don’t let this value escape you!&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.fastcompany.com/3033993/hit-the-ground-running/the-intangible-career-trait-that-you-need-to-succeed&quot;&gt;Executive Presence&lt;/a&gt; as seen on FC&lt;/li&gt;
  &lt;li&gt;“Crossing the Chasm” by G. Moore&lt;/li&gt;
  &lt;li&gt;“The Founder’s Dilemma” by Naom Wasserman&lt;/li&gt;
  &lt;li&gt;“&lt;a href=&quot;http://www.forentrepreneurs.com/saas-metrics-2/&quot;&gt;SaaS Metrics 2.0 ­ A Guide to Measuring and Improving What Matters&lt;/a&gt;”” by David Skok&lt;/li&gt;
  &lt;li&gt;“&lt;a href=&quot;&quot;&gt;The Entrepreneurs Guide to Business Law&lt;/a&gt; by Bagley and Dauchy. This was actually a great recommendation from &lt;a href=&quot;http://www.flywheelventures.com/index.php/website/flywheel_team/&quot;&gt;Trevor Loy&lt;/a&gt;. It’s a leading reference book for legal issues surrounding entrepreneurship and is one of those books that gives you essential jargon and “skills-based” knowledge. &lt;/li&gt;
  &lt;li&gt;“How to Write a Great Business Plan” by William Sahlman&lt;/li&gt;
  &lt;li&gt;“&lt;a href=&quot;&quot;&gt;The Neatest Little Guide to Stock Market Investing&lt;/a&gt;”” by Jason Kelly&lt;/li&gt;
  &lt;li&gt;“&lt;a href=&quot;http://abovethecrowd.com/2009/08/24/what-is-really-happening-to-the-venture-capital-industry/&quot;&gt;What is Really Happening to the Venture Capital Industry&lt;/a&gt;” by Bill Gurley of Benchmark Capital&lt;/li&gt;
  &lt;li&gt;“Business Plan’s That Work” from Zacharakis, Spinelli and Timmons&lt;/li&gt;
  &lt;li&gt;“&lt;a href=&quot;http://ospflor63.stanford.edu/upload/handouts/Secret_Sauce_-_Seelig.pdf&quot;&gt;The Secret Sauce of Silicon Valley” by Tina Seelig in “What I Wish I Knew When I Was 20&lt;/a&gt;“
“&lt;a href=&quot;http://www.sramanamitra.com/2014/01/27/who-are-the-top-vcs-in-silicon-valley-today/&quot;&gt;Who Are The Top VCs in Silicon Valley Today?&lt;/a&gt;””&lt;/li&gt;
  &lt;li&gt;“&lt;a href=&quot;http://techcrunch.com/2013/11/02/welcome-to-the-unicorn-club/&quot;&gt;Welcome To The Unicorn Club: Learning From Billion­-Dollar Startups&lt;/a&gt;” from Aileen Lee.&lt;/li&gt;
  &lt;li&gt;“Why the Lean Start­Up Changes Everything” by Steve Blank&lt;/li&gt;
  &lt;li&gt;Generally, anything about &lt;a href=&quot;http://qz.com/317918/holacracy-at-zappos-its-either-the-future-of-management-or-a-social-experiment-gone-awry/&quot;&gt;Holacracy&lt;/a&gt; (…or Holo-crazy as I’ve sometimes experienced it!)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And in case you’re a glutton for punishment, here’s some other informative and awesome reads that will open up your mind to better leadership…&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“The Prince” Niccolo Machiavelli&lt;/li&gt;
  &lt;li&gt;“The Secrets of Storytelling” by Jeremy Hsu&lt;/li&gt;
  &lt;li&gt;“Super People” by James Atlas&lt;/li&gt;
  &lt;li&gt;“Cowboys and Pit Crews” by Atul Gawande&lt;/li&gt;
  &lt;li&gt;“Earn More Respect” by Warren Bennis&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 14 Jan 2015 00:00:00 -0800</pubDate>
        <link>http://www.austinhay.com/entrepreneurship/2015/01/14/Entrepreneurs-Becoming-Entrepreneurial-Resources-to-Get-You-Started.html</link>
        <guid isPermaLink="true">http://www.austinhay.com/entrepreneurship/2015/01/14/Entrepreneurs-Becoming-Entrepreneurial-Resources-to-Get-You-Started.html</guid>
        
        <category>self-development</category>
        
        <category>strategy</category>
        
        <category>leadership</category>
        
        <category>good reads</category>
        
        
        <category>entrepreneurship</category>
        
      </item>
    
      <item>
        <title>Opening Up Open Graph</title>
        <description>&lt;p&gt;As I’ve dug deeper into how content is displayed across the web, I’ve found that it’s not always as rosy as I’d like. A big problem is that I am a total &lt;code&gt;n00b&lt;/code&gt; and don’t always get my code just right when writing up my thoughts. In turn this means my pages don’t always display correctly across different applicaitons like Facebook or Linked-In. &lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;See how lame this looks? Nobody is going to read this without a picture and some awesome OG tags.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blogs/open-graph-ex-1.png&quot; alt=&quot;alt text&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After doing some research, I’ve found there are amazing &lt;code&gt;meta&lt;/code&gt; tags out there that fall under &lt;a href=&quot;http://ogp.me/&quot;&gt;OpenGraph&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The concept and application is simple. Whenever you list your site on the internet, web crawlers look for &lt;code&gt;meta&lt;/code&gt; tags to compile information about your site and map it within their database. The more &lt;code&gt;meta&lt;/code&gt; information you have the better, as it makes it easier for your website to be properly linked and mapped in a web-search. Beyond this, Facebook, Twitter, and other social media sites use OpenGraph tags in order to generate previews for articles and webpages among many other things. &lt;/p&gt;

&lt;h4 id=&quot;implementation&quot;&gt;Implementation&lt;/h4&gt;

&lt;p&gt;The basic code structure for open graph meta tags is simple:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;meta property=&quot;&quot; content=&quot;&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There are different properties as well. Here are a few to get you started:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;property=&quot;og:title&quot;
property=&quot;og:image&quot; 
property=&quot;og:site&quot;
property=&quot;og:description&quot;
property=&quot;og:type&quot;
property=&quot;og:url&quot;
property=&quot;article:author
property=&quot;article:section&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;From there you just have to enter the &lt;code&gt;&quot;content&quot;&lt;/code&gt; portion of the code. If you’re doing it with static pages then this is just &lt;code&gt;text&lt;/code&gt;, otherwise you should generate it dynamically. For my own purposes, I used &lt;a href=&quot;http://docs.shopify.com/themes/liquid-documentation/basics&quot;&gt;&lt;code&gt;liquid tags&lt;/code&gt;&lt;/a&gt; and plugged into the power of &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; to generate my tags automatically for every static page I work up. Here’s a code snippet from my website of what this would actually look like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blogs/open-graph-ex-2.png&quot; alt=&quot;alt text&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Oh, and it’s VERY important to remember to call the &lt;code&gt;og&lt;/code&gt; tag in the beginning of the &lt;code&gt;html&lt;/code&gt;. Just throw this in your &lt;code&gt;head&lt;/code&gt; section somewhere:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;html prefix=&quot;og: http://ogp.me/ns#&quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As always, this doesn’t even scratch the surface of all the cool things that OpenGraph can deliver. Explore it on your own and &lt;a href=&quot;http://www.austinhay.com/contact&quot;&gt;let me know&lt;/a&gt; what you find. Here are some fun resources that you might check out with more time:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.gavick.com/blog/controlling-facebook-link-previews-and-getting-to-know-open-graph&quot;&gt;Getting to Know Open Graph&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.iacquire.com/blog/18-meta-tags-every-webpage-should-have-in-2013&quot;&gt;Essential Meta Tags from 2013&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;How to &lt;a href=&quot;http://davidensinger.com/2013/04/adding-open-graph-tags-to-jekyll/&quot;&gt;implement&lt;/a&gt; in Jekyll, like I did.&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 08 Jan 2015 00:00:00 -0800</pubDate>
        <link>http://www.austinhay.com/coding/2015/01/08/Opening-Up-Open-Graph.html</link>
        <guid isPermaLink="true">http://www.austinhay.com/coding/2015/01/08/Opening-Up-Open-Graph.html</guid>
        
        <category>web-development</category>
        
        <category>software</category>
        
        <category>blogging essentials</category>
        
        
        <category>coding</category>
        
      </item>
    
      <item>
        <title>The Essential System Setup for Beginner Coders</title>
        <description>&lt;p&gt;The other day I got setup on a new machine and I found myself scratching my head. How the heck did I get Ruby, Rails, Python and all those other tools set up? My command line tools weren’t even accessible. I am guessing this realization isn’t new to anyone in programming, but it was a new phenomenon to me. I decided the best solution was to draft up a short list of all the items I needed to install and how I would install them. For newbies looking to dive into coding, this should serve as a perfect checklist when getting your machine set up. Enjoy!
&lt;!--more--&gt;
PS I don’t go into detail explaining each one of these installs or why they are relevant. I just show you how to get stuff up and running with helpful links. I’ll leave the relevancy part to you, as its a good edification process.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note&lt;/b&gt;: &lt;i&gt;This installation &amp;amp; setup guide is only applicable for those running OS X.&lt;/i&gt; I personally was running Yosemite when I did the setup process again, but I went through all this stuff on Lion and Mavericks. Just make sure to pick your installations appropriately from the links provided.&lt;/p&gt;

&lt;h3 id=&quot;chromehttpswwwgooglecomchrome&quot;&gt;&lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;Chrome&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Really? REALLY? You’re not using Chrome? Come on.&lt;/p&gt;

&lt;h3 id=&quot;markdown-previewhttpschromegooglecomwebstoredetailmarkdown-previewjmchmkecamhbiokiopfpnfgbidieafmd&quot;&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/markdown-preview/jmchmkecamhbiokiopfpnfgbidieafmd&quot;&gt;Markdown Preview&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I love writing in Markdown. This handy extension let’s you view files offline in Chrome.&lt;/p&gt;

&lt;h3 id=&quot;sublime-text-editorhttpwwwsublimetextcom&quot;&gt;&lt;a href=&quot;http://www.sublimetext.com/&quot;&gt;Sublime Text Editor&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Tons of text editors out there. This one is my favorite. If you install Sublime you should also install the &lt;code&gt;subl&lt;/code&gt; CLI. Sublime talks about in their [documentation], but you can also find a read on it &lt;a href=&quot;http://olivierlacan.com/posts/launch-sublime-text-3-from-the-command-line/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Long story short:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Check your PATH to verify that usr/local/bin is included
echo $PATH
ln -s &quot;/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl&quot; /usr/local/bin/subl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can replace the &lt;code&gt;subl&lt;/code&gt; with sublime or anything you want really to call the command. &lt;/p&gt;

&lt;h3 id=&quot;latest-version-of-xquartzhttpsxquartzmacosforgeorg&quot;&gt;&lt;a href=&quot;https://xquartz.macosforge.org&quot;&gt;Latest Version of XQuartz&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Just download and install the &lt;code&gt;.dmg&lt;/code&gt; file.&lt;/p&gt;

&lt;h3 id=&quot;command-line-toolshttprailsappsgithubioxcode-command-line-toolshtml&quot;&gt;&lt;a href=&quot;http://railsapps.github.io/xcode-command-line-tools.html&quot;&gt;Command Line Tools&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;xcode-select --install
gcc --version
sudo xcodebuild -license
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;homebrewhttpbrewsh&quot;&gt;&lt;a href=&quot;http://brew.sh/&quot;&gt;HomeBrew&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;
brew doctor
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;macportshttpswwwmacportsorginstallphp&quot;&gt;&lt;a href=&quot;https://www.macports.org/install.php&quot;&gt;MacPorts&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Make sure you have Xcode installed and the licensed accepted. Install the &lt;code&gt;.dmg&lt;/code&gt; file corresponding to your version of OS X.&lt;/p&gt;

&lt;h3 id=&quot;ruby-version-manager-rvmhttpsrvmio&quot;&gt;&lt;a href=&quot;https://rvm.io/&quot;&gt;Ruby Version Manager (RVM)&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;brew install gpg
brew install gpg2
gpg --keyserver hkp://keys.gnupg.net --recv-keys D39DC0E3
\curl -sSL https://get.rvm.io | bash -s stable
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I found that when I first started RVM was a bit confusing. There’s a great cheat sheet &lt;a href=&quot;Also, a great RVM cheat sheet can be found [here](http://cheat.errtheblog.com/s/rvm)&quot;&gt;here&lt;/a&gt; that will help you keep on track.&lt;/p&gt;

&lt;p&gt;Installing Ruby
There are a few different ways to get Ruby. I’m going to explain a few, but only listen to the last one.&lt;/p&gt;

&lt;p&gt;First, you could download the &lt;code&gt;.tar.gz&lt;/code&gt; for the version you want to install. OS X Yosemite comes with ruby 2.0.0, but you can update it to the latest version or others from this &lt;a href=&quot;https://www.ruby-lang.org/en/downloads/&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Another way to install Ruby is with &lt;code&gt;rbenv&lt;/code&gt; found &lt;a href=&quot;https://github.com/sstephenson/ruby-build#readme&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install ruby-build
brew install rbenv
rbenv install 2.2.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;BUT, the way that I’m going to do it, and I recommend you doing it too, is with a Ruby manager, like RVM, which we JUST installed. At the end of installing a few essential version of Ruby, don’t forget to set RVM’s default. I like to use the most current stable build.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rvm install 1.9.3
rvm install 2.0.0
rvm install 2.1.5
rvm install 2.2.0
rvm use --default 2.2.0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;updating-githttpkj-princecomcodeinstall-git-mac-osx-homebrew-from-the-pre-installed-os-x-version&quot;&gt;&lt;a href=&quot;http://kj-prince.com/code/install-git-mac-osx-homebrew/&quot;&gt;Updating Git&lt;/a&gt; from the Pre-Installed OS X Version&lt;/h3&gt;
&lt;p&gt;This isn’t a requirement because Git comes pre-installed on Macs, but it is nice to have the latest stable build, so I’d recommend doing it. There are many ways. If you’re just starting &lt;a href=&quot;http://git-scm.com/book/en/v2/Getting-Started-Installing-Git&quot;&gt;Github&lt;/a&gt; has a nice process flow for it. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install git
git --version
which git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should notice that there’s a difference here. The pre-installed OS X Git takes precedence, so let’s fix that. Tell bash to look in the correct path for the Homebrew managed version of Git. Restart your terminal after execution.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &#39;export PATH=&quot;/usr/local/bin:/usr/local/sbin:~/bin:$PATH&quot;&#39; &amp;gt;&amp;gt; ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When I first starting coding this is one thing that really got me. What the heck is &lt;code&gt;$PATH&lt;/code&gt;? Simmer down. Check out this good read on &lt;a href=&quot;http://superuser.com/questions/284342/what-are-path-and-other-environment-variables-and-how-can-i-set-or-use-them&quot;&gt;environmental variables&lt;/a&gt; and all will be revealed.&lt;/p&gt;

&lt;h3 id=&quot;coffeescripthttpcoffeescriptorg&quot;&gt;&lt;a href=&quot;http://coffeescript.org/&quot;&gt;CoffeeScript&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;npm install -g coffee-script
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;nodejshttpnodejsorg&quot;&gt;&lt;a href=&quot;http://nodejs.org/&quot;&gt;Node.JS&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Follow the link to download. Or follow it with Brew.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install node
echo &#39;export NODE_PATH=/usr/local/lib/node_modules&#39; &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;get-ruby-gemshttpsrubygemsorgpagesdownload-amp-railshttprubyonrailsorgdownload&quot;&gt;Get &lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;Ruby Gems&lt;/a&gt; &amp;amp; &lt;a href=&quot;http://rubyonrails.org/download/&quot;&gt;RAILS&lt;/a&gt;!&lt;/h3&gt;
&lt;p&gt;No Ruby would be complete without some GEMs. Here are a few to start.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem install RubyGems
gem install rails
gem install jekyll
gem install json
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;get-pythonhttpswwwpythonorgdownloads&quot;&gt;Get &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;Python&lt;/a&gt;!&lt;/h3&gt;

&lt;p&gt;Most experienced Python-ers know to pick 3.0; I still don’t know all the in’s &amp;amp;amp’ out’s and by no means an expert. I do know that 3 is gaining traction and 2 is not going to be used in the long-term horizon. But,if you’re just starting then stick with Zed Shaw in his AMAZING &lt;a href=&quot;http://learnpythonthehardway.org/book/&quot;&gt;“Learning Python the Hard Way”&lt;/a&gt; and just go with 2. Python 3 is cool if you’re building up-to-date apps in Django.&lt;/p&gt;

&lt;h3 id=&quot;python-virtual-environment&quot;&gt;Python &lt;a href=&quot;&quot;&gt;Virtual Environment&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;sudo pip install virtualenvwrapper
cd
ls -a
cat &amp;lt;&amp;lt; EOF &amp;gt;&amp;gt; .bashrc
	export WORKON_HOME=$HOME/.virtualenvs
	export PROJECT_HOME=$HOME/Devel
	source /usr/local/bin/virtualenvwrapper.sh
EOF
source ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;piphttpspippypaioenlatestinstallinghtmlpython-os-support&quot;&gt;&lt;a href=&quot;https://pip.pypa.io/en/latest/installing.html#python-os-support&quot;&gt;Pip&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Follow the link and click “Save As…” on the the &lt;code&gt;.py&lt;/code&gt; file. Save it in your local directory or downloads. Next…&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# If you saved it in ~/Downloads...
cd 
mv ~/downloads/get-pip.py ~/get-pip.py
sudo python get-pip.py
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;get-djangohttpswwwdjangoprojectcomdownload&quot;&gt;Get &lt;a href=&quot;https://www.djangoproject.com/download/&quot;&gt;Django&lt;/a&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;pip install Django==1.7.2
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Tue, 06 Jan 2015 00:00:00 -0800</pubDate>
        <link>http://www.austinhay.com/coding/2015/01/06/Essential-System-Setup-For-Beginner-Coders.html</link>
        <guid isPermaLink="true">http://www.austinhay.com/coding/2015/01/06/Essential-System-Setup-For-Beginner-Coders.html</guid>
        
        <category>web-development</category>
        
        <category>software</category>
        
        <category>system setup</category>
        
        <category>rookie tricks</category>
        
        
        <category>coding</category>
        
      </item>
    
      <item>
        <title>Prepping for Django</title>
        <description>&lt;p&gt;In my free time I’ve been trying to dive deeper into alternative web-frameworks and coding languages. Python has been my primary target for its ease-of-use and ubiquity among the web’s top development languages. &lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;In my experiences learning Python I have found that it’s actually quite similar to Ruby. It’s a lot less cumbersome than C or C++ and it has some killer docs to support both beginner &amp;amp; intermediate programmers. In fact, the “create your own first Django app” is one of the best &lt;a href=&quot;https://docs.djangoproject.com/en/1.7/intro/tutorial01/&quot;&gt;resources&lt;/a&gt; I have found out there.&lt;/p&gt;

&lt;p&gt;With the hopes to start in a casual coding internship role soon, I took to developing a Python &amp;amp; Django prep guide for my friend, Stephen, at SCOOPR Media. Learning about Django and getting setup on both PyCharm &amp;amp; VirtualEnvironment was difficult and is still confusing, but this guide covers the basics. Enjoy!&lt;/p&gt;

&lt;p&gt;The most updated prep file can be found &lt;a href=&quot;https://github.com/AustinHay/django_tutorial/blob/master/django_prep.md&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;https://media.licdn.com/media/p/2/005/0a3/019/1fbd870.png&quot; alt=&quot;alt text&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;django-prep-for-scoopr-internship&quot;&gt;Django Prep for SCOOPR Internship&lt;/h1&gt;

&lt;p&gt;Lead Software Engineer: Stephen Estrada&lt;/p&gt;

&lt;p&gt;Software Intern: Austin Hay&lt;/p&gt;

&lt;p&gt;Updated January 5, 2014&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;get-comfy-with-cl-and-learn-to-create-repo-remotely-from-cl&quot;&gt;1. Get comfy with CL and learn to create REPO remotely from CL.&lt;/h3&gt;

&lt;p&gt;There are a few ways to do it. You could create a custom command in bash, use the API tools from Github, or use HUB, which adds a bunch of cool features. I did it the gritty way – with straight Github API.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -u USER https://api.github.com/user/repos -d &quot;{\&quot;name\&quot;:\&quot; $REPO_NAME\&quot;}&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, you (might?) need to add the remotes:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git remote add origin git@github.com:USER/REPO_NAME.git
git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;USER &amp;amp; REPO_NAME should be replaced with their respective values.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There’s a cool &lt;a href=&quot;https://gist.github.com/robwierzbowski/5430952&quot;&gt;bash script&lt;/a&gt; that automates this process, but I’m not sure if this is kosher with your crew, &lt;a href=&quot;https://github.com/stcrestrada&quot;&gt;Stephen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;&lt;b&gt;Sidenote&lt;/b&gt;&lt;/u&gt;: cURL is an awesome CL tool that I spent a good amount of time learning about. The cURL &lt;a href=&quot;http://curl.haxx.se/docs/manpage.html&quot;&gt;tags&lt;/a&gt; are where the magic is at.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;create-a-virtualenv-wrapper-for-your-new-repo&quot;&gt;2. Create a virtualenv wrapper for your new repo:&lt;/h3&gt;

&lt;h4 id=&quot;step-a-getting-up-to-speed-on-virtualenv&quot;&gt;Step A. Getting Up to Speed on VirtualEnv&lt;/h4&gt;

&lt;p&gt;Follow the &lt;a href=&quot;http://virtualenvwrapper.readthedocs.org/en/latest/&quot;&gt;link&lt;/a&gt; to the virtual wrapper docs.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo pip install virtualenvwrapper
$ cd
$ ls -a
$ cat &amp;lt;&amp;lt; EOF &amp;gt;&amp;gt; .bashrc 
	export WORKON_HOME=$HOME/.virtualenvs
	export PROJECT_HOME=$HOME/Devel
	source /usr/local/bin/virtualenvwrapper.sh
$ EOF
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;It’s really important that you use &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; on the right hand side of EOF. If you use &lt;code&gt;&amp;gt;&lt;/code&gt; then you’ll override your whole .bashrc file. I learned this the hard way…&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Finally, reload the startup file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ source ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;What I learned about Virtual Wrapper so far…&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;virtualenvwrapper&lt;/code&gt; is a virtual environment tool extension that includes wrappers for creating and deleting virtual environments and thus managing development workflow. This makes it easier to work on more than on project at a time without introducing conflicts in the project’s dependencies.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The variable &lt;code&gt;WORKON_HOME&lt;/code&gt; tells virtual wrapper where to place your virtual environments. Default is &lt;code&gt;$HOME/.virtualenvs&lt;/code&gt;. &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;VWrapper is customizable @ &lt;code&gt;virtualwrapper.sh&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;At startup, Vwrapper finds the first &lt;code&gt;python&lt;/code&gt; and &lt;code&gt;virtualenv&lt;/code&gt; programs on &lt;code&gt;$PATH&lt;/code&gt;. &lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;step-b-creating-a-wrapper-around-a-github-repo&quot;&gt;Step B. Creating a wrapper around a Github Repo&lt;/h4&gt;

&lt;p&gt;A great &lt;a href=&quot;https://github.com/zookeepr/zookeepr/wiki/Creating-a-Development-Environment-with-pip-and-virtualenv&quot;&gt;walkthrough&lt;/a&gt; is available online. But there are many others as well. We all love &lt;a href=&quot;http://stackoverflow.com/&quot;&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First, navigate to the directory where you’ll store your Django projects.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone [https://etc.etc.REPO_NAME] # Just grab the url from Github if you have trouble.
mkvirtualenv --no-site-packages REPO_NAME
$ touch requirements.txt
$ cat &amp;lt;&amp;lt; EOF &amp;gt; requirements.txt
    AuthKit
    Beaker
    FormEncode
    Mako
    MarkupSafe
    Paste
    PasteDeploy
    PasteScript
    PIL
    Pygments
    Pydns
    Pylons==0.9.7
    pytz
    Routes
    SQLAlchemy==0.6.3
    Tempita
    WebError
    WebHelpers
    WebOb==0.9.8
    WebTest
    decorator
    dnspython
    elementtree
    lxml
    nose
    python-openid
    simplejson
    wsgiref 
    EOF
$ pip install -r requirements.txt 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Make sure your &lt;code&gt;virtualenv&lt;/code&gt; is activated when you run this comand so that pip will only install these packages for this specific virtual environment.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;All of these requirements were what I found to be useful. This could totally vary on the project. The purpose is mostly to demonstrate how to load custom packages into a virtual environment for use in further development.&lt;/p&gt;

&lt;p&gt;Beyond this, there’s so much more that I don’t fully understand about virtual environment; this includes Pylons and a bunch of other stuff. At the very least this will get us off the ground and running. Afterwards, it would be good to check out more virtual environment &lt;a href=&quot;http://virtualenvwrapper.readthedocs.org/en/latest/index.html&quot;&gt;documentation&lt;/a&gt; to fully understand what’s going on.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;download-pycharm-and-play-with-it&quot;&gt;3. Download PyCharm and play with it&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.jetbrains.com/pycharm/download/&quot;&gt;Download&lt;/a&gt; it and play around with it.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;make-the-django-tutorial-project&quot;&gt;4. Make the Django Tutorial Project&lt;/h3&gt;

&lt;p&gt;Instructions can be found &lt;a href=&quot;https://docs.djangoproject.com/en/1.7/intro/tutorial01/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;final-notes&quot;&gt;5. Final Notes&lt;/h3&gt;

&lt;p&gt;This internship will be focused on front-end engineering, so keep in mind the &lt;a href=&quot;https://docs.djangoproject.com/en/1.7/howto/static-files/&quot;&gt;static files architecture&lt;/a&gt; and proper placement methodologies.&lt;/p&gt;

&lt;p&gt;Become familiar with other web development frameworks, such as Sinatra, Rails, etc. Django is also considered an MVC framework, but goes by another name MVT. Do some research on it.  &lt;/p&gt;

&lt;h3 id=&quot;additional-awesome-resources&quot;&gt;Additional (awesome) Resources:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Great &lt;a href=&quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&quot;&gt;markdown&lt;/a&gt; resource. Oh, and &lt;a href=&quot;http://nestacms.com/docs/creating-content/markdown-cheat-sheet&quot;&gt;another&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 05 Jan 2015 00:00:00 -0800</pubDate>
        <link>http://www.austinhay.com/coding/2015/01/05/Prepping-for-Django.html</link>
        <guid isPermaLink="true">http://www.austinhay.com/coding/2015/01/05/Prepping-for-Django.html</guid>
        
        <category>web-development</category>
        
        <category>django</category>
        
        <category>python</category>
        
        <category>software</category>
        
        
        <category>coding</category>
        
      </item>
    
      <item>
        <title>Working Through the Django Tutorial: Outline &amp;amp; Takeaways Part 1</title>
        <description>&lt;hr /&gt;

&lt;p&gt;In order to better familiarize myself with Django I decided to work through the Django simple app tutorial which allows you to create a “polls” app. The walkthrough can be found on Django docs &lt;a href=&quot;https://docs.djangoproject.com/en/1.7/intro/tutorial01/&quot;&gt;here&lt;/a&gt;. 
&lt;!--more--&gt;&lt;/p&gt;

&lt;h4 id=&quot;b-starting-off-b&quot;&gt;&lt;b&gt; Starting Off &lt;/b&gt;&lt;/h4&gt;

&lt;p&gt;Initiate a django project by &lt;code&gt;cd&lt;/code&gt; into the directory where you will store your project:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
$ django-admin.py startproject [DIR_NAME]
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This directory name doesn’t matter and you can rename it to anything you want. But inside of this directory you’ll see a layout like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[DIR_NAME]/
	manage.py
	mysite/
	__init__.py
	settings.py
	urls.py
	wsgi.py
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;b--breaking-down-the-framework-structure-b&quot;&gt;&lt;b&gt;  Breaking Down the Framework structure &lt;/b&gt;&lt;/h4&gt;

&lt;p&gt;These different files have the following functions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;[DIR_NAME]&lt;/code&gt; is the name of the root directory which contains your project. Django doesn’t care about this, so name it whatever you want, but make sure not to use &lt;code&gt;django&lt;/code&gt; or &lt;code&gt;test&lt;/code&gt; in your naming as this could create conflicts with the actual app.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;manage.py&lt;/code&gt; lets you interact with the Django project. It is a thin wrapper around &lt;code&gt;django-admin.py&lt;/code&gt; that does the following:
    &lt;ul&gt;
      &lt;li&gt;Places project’s packages on &lt;code&gt;sys.pth&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Sets &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; environment variable so that it points to your project’s &lt;code&gt;settings.py&lt;/code&gt; file.&lt;/li&gt;
      &lt;li&gt;Calls &lt;code&gt;django.setup()&lt;/code&gt; to initialize internals for Django.&lt;/li&gt;
      &lt;li&gt;Full documentation &lt;a href=&quot;https://docs.djangoproject.com/en/1.7/ref/django-admin/&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
      &lt;li&gt;Command &lt;code&gt;options&lt;/code&gt; found &lt;a href=&quot;https://docs.djangoproject.com/en/1.7/ref/django-admin/#available-commands&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;mysite/&lt;/code&gt; is the Python package for the project. Anytime we import anything inside of the project we will use this package name (e.g.&lt;code&gt;mysite.urls&lt;/code&gt;).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;__init__.py&lt;/code&gt; is just an empty file that indicates that the &lt;code&gt;mysite/&lt;/code&gt; directory should be considered a python package.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;settings.py&lt;/code&gt; in its simplest form is just a Python module with module-level variables. Since it is a Python module it won’t allow Python syntax errors, it can import values from other settings files, and it can assign settings dynamically using normal python syntax (such as using a for loop).
    &lt;ul&gt;
      &lt;li&gt;Settings can be used in your Django app by importing the object &lt;code&gt;django.conf.settings&lt;/code&gt;. Since it’s an object, however, you can’t import individual settings. EX:
&lt;code&gt;
from django.conf import settings
&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Full documentation on settings and configurations can be found &lt;a href=&quot;https://docs.djangoproject.com/en/1.7/topics/settings/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;There are a RIDICULOUS number of settings. I spent an hour and my brain hurt just going through them all. You should do the &lt;a href=&quot;https://docs.djangoproject.com/en/1.7/ref/settings/&quot;&gt;same&lt;/a&gt;.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;urls.py&lt;/code&gt; contains the URL declarations for the Django project. You can think of it like &lt;code&gt;routes.rb&lt;/code&gt; in Rails. URLs are controlled by the &lt;a href=&quot;https://docs.djangoproject.com/en/1.7/topics/http/urls/&quot;&gt;URL Dispatcher&lt;/a&gt;.
    &lt;ul&gt;
      &lt;li&gt;&lt;b&gt;So, what exactly is the &lt;code&gt;URL Dispatcher&lt;/code&gt;?&lt;/b&gt; It is the URL scheme that lets you design URLs without framework limitations commonly found in &lt;code&gt;php&lt;/code&gt; and &lt;code&gt;cgi&lt;/code&gt;. &lt;/li&gt;
      &lt;li&gt;One of the founders of the World Wide Web (yeah, that title is for real) Tim Berners-Lee &lt;a href=&quot;http://www.w3.org/Provider/Style/URI&quot;&gt;discusses&lt;/a&gt; why URIs have to be clean and usable. This is a must read.&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;URLconf&lt;/code&gt; is the Python module made up of pure Python code that maps between URL patterns (simple expressions) and Python functions (your app views).&lt;/li&gt;
      &lt;li&gt;Django proccesses a requestFor the sake of not totally regurgitating django docs, just read &lt;a href=&quot;https://docs.djangoproject.com/en/1.7/topics/http/urls/#how-django-processes-a-request&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;wsgi.py&lt;/code&gt; functions as an entry point for WSGI-compatible web servers to serve up your project. &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;b--rolling-into-databases-apps-vs-projects-and-much-much-more-b&quot;&gt;&lt;b&gt;  Rolling into Databases, Apps vs. Projects and much, much more… &lt;/b&gt;&lt;/h4&gt;

&lt;p&gt;From here, you are pretty much set up and ready to start the hard part (or fun part), which entails the actual coding. That’s one beautiful aspect of Django – it handles the grunt work of laying out your project and apps in a way that gives you more time to focus on building your actual content. &lt;/p&gt;

&lt;h4 id=&quot;b--key-insights-b&quot;&gt;&lt;b&gt;  Key Insights &lt;/b&gt;&lt;/h4&gt;

&lt;p&gt;Beyond all the learning curve that comes with pouring over documentation and grappling with new commands, I found there were some interesting points that stuck in my mind…&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Django is filled with instances of pure Python code, &lt;b&gt;which means modules and other app features can be constructed dynamically&lt;/b&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;One major difference between Django and a frameowkr like Ruby on Rails is that &lt;b&gt;the data model is totally defined in one place and everything is derived from it&lt;/b&gt;. This means that things like migrations are entirely derived from your &lt;code&gt;models.py&lt;/code&gt; file. This just acts as a history that Django can roll through to update database schema to match the most current model. &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Taken straight from documentation…“&lt;b&gt;Django apps are ‘pluggable’&lt;/b&gt;: You can use an app in multiple projects, and you can distribute apps, because they don’t have to be tied to a given Django installation.” SO Awesome!!!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;b&gt;A point of clarity around migrations:&lt;/b&gt; As Django docs explains migrations are simply how Django stores changes made to the models you’ve created in your apps (ie …and so it also stores and tracks the changes made to your database schema, since these are derived from your models). These are stored as files on disk and you can read and manipulate them at will. &lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;b-beginner-essential-commands-b&quot;&gt;&lt;b&gt; Beginner Essential Commands &lt;/b&gt;&lt;/h4&gt;

&lt;p&gt;Throughout the tutorial I took note of the most essential commands that would help me build a Django app and navigate it afterwards. The straight commands are listed below. If you’re confused on one of them, google it!&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;$ django-admin.py startproject [DIR_NAME]&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;python manage.py startapp [APP_NAME]&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;python manage.py runserver [port or IP address]&lt;/code&gt;
 For example:&lt;/p&gt;

    &lt;p&gt;&lt;code&gt;python manage.py runserver [0.0.0.0:8000]&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;This could be used to listen on all ports and show off your work on other local machines.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;python manage.py makemigrations [APP_NAME]&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;Creates migrations for changes made to the models.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;python manage.py migrate&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;Actually applies the changes made to models to the database.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;python manage.py sqlmigrate [APP_NAME] [MIGRATION_NUMBER]&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;python manage.py check&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code&gt;python manage.py shell&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;python manage.py shell&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sun, 04 Jan 2015 00:00:00 -0800</pubDate>
        <link>http://www.austinhay.com/coding/2015/01/04/Django-Tutorial-Walkthrough-P1.html</link>
        <guid isPermaLink="true">http://www.austinhay.com/coding/2015/01/04/Django-Tutorial-Walkthrough-P1.html</guid>
        
        <category>web-development</category>
        
        <category>django</category>
        
        <category>python</category>
        
        <category>software</category>
        
        <category>documentation breakdown</category>
        
        
        <category>coding</category>
        
      </item>
    
      <item>
        <title>Year in Review</title>
        <description>&lt;p&gt;2014 was a ridiculous year. In my mind it represents the most wild, crazy, stressful, exciting, fun and empowering year I have ever had. When I rung in 2014 last year I was in NYC with &lt;a href=&quot;http://instagram.com/p/tbT-TdBJ4l/?modal=true&quot;&gt;my beautiful girlfriend of 5 years&lt;/a&gt;. We ended up having a quiet night -- literally, we fell asleep on a couch before it was midnight. (Spoiler Alert: 2015 also involved a couch and grandpa&#39;s bed-time) The bright side is that Virginia and DC are both ridiculously beautiful places to spend the holidays.

&lt;/p&gt;&lt;!--more--&gt;
&lt;img class=&quot;imageright&quot; src=&quot;/images/blogs/2014-year-in-review/washington_monument.jpg&quot;&gt;
&lt;p&gt;It&#39;s funny that the way we started the year was hardly how we ended up sprinting through the days to come. Looking back on my year, the best parts of 2014 were about...
&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Chasing opportunities abroad.
	&lt;/li&gt;
	&lt;li&gt;Taking big risks &amp;amp; stepping outside my comfort zone.
	&lt;/li&gt;
	&lt;li&gt;Practicing leadership &amp;amp; becoming a better operator.
	&lt;/li&gt;
	&lt;li&gt;Taking my education into my own hands, especially after graduating.
	&lt;/li&gt;
	&lt;li&gt;Trying to have more fun &amp;amp; love more.
	&lt;/li&gt;
	&lt;li&gt;Learning. Learning. Learning. About everything, everyone, and myself.
	&lt;/li&gt;
&lt;/ul&gt;

But it wasn&#39;t all rosy. I also had some difficult times. In particular, the hardships taught me...
&lt;ul&gt;
	&lt;li&gt;Reflect more, listen more, and be more self-aware.
	&lt;/li&gt;
	&lt;li&gt;Stop being so damn tightly-wound.
	&lt;/li&gt;
	&lt;li&gt;Good, clear, obvious, and authentic communication is really at the heart of navigating life.
	&lt;/li&gt;
	&lt;li&gt;Chill out &amp;amp; focus on bringing the best out of others.
	&lt;/li&gt;
	&lt;li&gt;Execute as best you possibly can on the promises you make others.
	&lt;/li&gt;
	&lt;li&gt;Leave your ego at the door, and in this case, in 2014.
	&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
What colored these lessons from 2014 were the actual experiences I created over the year. This list isn&#39;t to &quot;humble-brag&quot;, but to give context to the lessons I learned. 
&lt;/p&gt;

&lt;img class=&quot;imageleft&quot; src=&quot;/images/blogs/2014-year-in-review/friends_stanford.jpg&quot;&gt;


&lt;p&gt;&lt;u&gt;&lt;b&gt;2014 Highlights:&lt;/b&gt;&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;&lt;ul&gt;
	&lt;li&gt;Graduated from Stanford with dual MS degrees in Engineering.
 		&lt;p&gt;&lt;i&gt;*Sidenote: This was probably the most stressful and deeply emotional process I have ever been through. I was juggling 22 units at one point and wasn&#39;t fully accepted to the MS&amp;amp;E department until late in May due to some complications with my application. I ended up writing a long letter to the Department Chair stating my case. I couldn&#39;t have made any of this happen without the love of my friends and family.&lt;/i&gt;
 		&lt;/p&gt;
 	&lt;/li&gt;

 	&lt;li&gt;Participated in &lt;a href=&quot;http://extreme.stanford.edu/what-extreme&quot;&gt;Design for Extreme Affordability&lt;/a&gt; &amp;amp; met some of the best people ever&lt;/a&gt;.
 	&lt;/li&gt;

	&lt;li&gt;&lt;a href=&quot;/images/blogs/2014-year-in-review/austin_cambodia.jpg&quot;&gt;Travelled to Cambodia&lt;/a&gt; to conduct user insights for Extreme.
	&lt;/li&gt;

	&lt;li&gt;Developed research on the quantitative fitness industry with one of my favorite professors, &lt;a href=&quot;https://profiles.stanford.edu/kathleen-eisenhardt&quot;&gt;Dr. Kahtleen Eisenhardt&lt;/a&gt;.
	&lt;/li&gt;

	&lt;li&gt;After interviewing with dozens of firms, I accepted a job with &lt;a href=&quot;http://www.accenture.com/us-en/contact/Pages/northern-california.aspx&quot;&gt;Accenture&lt;/a&gt;.
	&lt;/li&gt;

	&lt;li&gt;Graduated and flew to NYC to participate in &lt;a href=&quot;http://devbootcamp.com/&quot;&gt;Dev Bootcamp&lt;/a&gt;, a 9 week intensive programming academy to learn dynamic web programming. The best part was creating awesome friendships with super-talented coders.
	&lt;/li&gt;

	&lt;li&gt;After finishing my last course and wrapping up a summer in the city, I came back to CA and &lt;a href=&quot;/images/blogs/2014-year-in-review/apartment.jpg&quot;&gt;created a new home&lt;/a&gt; with Leila in Mountain View.
	&lt;/li&gt;

	&lt;li&gt;Travelled to India with the &lt;a href=&quot;http://engineering.stanford.edu/portals/student/jobs-and-internships/global-engineering-programs/study-tour/india-trip-teis&quot;&gt;TEIS Stanford program&lt;/a&gt; to study business &amp;amp; entrepreneurship... and really &lt;a href=&quot;/images/blogs/2014-year-in-review/friends_india.jpg&quot;&gt;just had a blast&lt;/a&gt; for 2 weeks.
	&lt;/li&gt;

	&lt;li&gt;Took off to &lt;a href=&quot;http://instagram.com/p/tOfWfAhJ6Y/?modal=true&quot;&gt;Japan&lt;/a&gt; with a friend from Stanford and my best friend in life.
	&lt;/li&gt;

	&lt;li&gt;While travelling in Japan I accepted a great opportunity to be a Course Assistant at &lt;a href=&quot;http://scpd.stanford.edu/home&quot;&gt;Stanford SCPD&lt;/a&gt;.
	&lt;/li&gt;

	&lt;li&gt;Came home and used October to continue refining my skills as a web-programmer. I built a &lt;a href=&quot;http://www.github.com/austinhay&quot;&gt;few cool apps&lt;/a&gt;, one of which I use everyday in my job as a course assistant at Stanford.
	&lt;/li&gt;

	&lt;li&gt;In November, I enjoyed a short trip for training in &lt;a href=&quot;http://instagram.com/p/u3UdrPBJ3v/?modal=true&quot;&gt;Chicago&lt;/a&gt;, which helped me launch my professional career at Accenture.
	&lt;/li&gt;
	
	&lt;li&gt;Continued &lt;a href=&quot;http://www.strava.com/athletes/3615909&quot;&gt;running&lt;/a&gt;, exercising and enjoying the outdoors ... although at this point I have determined I&#39;m much more of a social runner and avid gym-goer than anything else.
	&lt;/li&gt;

&lt;/ul&gt;&lt;/p&gt;

&lt;p&gt;Honestly, when I sat down to reflect on 2014, I had trouble processing everything because the year was jam-packed with all of these amazing opportunities, lessons, friendships, and memories.
&lt;/p&gt; 

&lt;div style=&quot;width: 100%, margin: auto&quot;&gt;
	&lt;img class=&quot;year-in-review-photos&quot; src=&quot;/images/blogs/2014-year-in-review/friends_apartment.jpg&quot;&gt;
	&lt;img class=&quot;year-in-review-photos&quot; src=&quot;/images/blogs/2014-year-in-review/friends_extreme.jpg&quot;&gt;

	&lt;img class=&quot;year-in-review-photos&quot; src=&quot;/images/blogs/2014-year-in-review/jordan+austin.jpg&quot;&gt;

	&lt;img class=&quot;year-in-review-photos&quot; src=&quot;/images/blogs/2014-year-in-review/friends_wedding.jpg&quot;&gt;

	&lt;img class=&quot;year-in-review-photos&quot; src=&quot;/images/blogs/2014-year-in-review/friends_dland.jpg&quot;&gt;

	&lt;img class=&quot;year-in-review-photos&quot; src=&quot;/images/blogs/2014-year-in-review/friends_india_2.jpg&quot;&gt;
	
&lt;/div&gt;

&lt;p&gt;But...if I had to distill one of the most important take-aways from the year it would be that &lt;b&gt;&lt;i&gt;people&lt;/b&gt;&lt;/i&gt; really are what make life so great. I think back to my year and its been the people that have made me most happy -- my wonderful family (Mom, Dad &amp;amp; Alexis), my incredible friends (there are literally too many to name). The best memories from the year have been sharing love and laughter with the people I care about. Reflecting has reminded me of this true-ism more than anything else.
&lt;/p&gt;

&lt;p&gt;
So, what does 2015 have in store? I&#39;m not totally sure yet. Up until a few days ago I was feeling a bit overwhelmed by 2014. But no start to the year would be complete without an actionable list of goals. I like to keep things simple and sweet.
&lt;/p&gt; 

&lt;p&gt;&lt;b&gt;2015 Goals&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Take the time to unwind &lt;i&gt;everyday&lt;/i&gt;.
	&lt;/li&gt;
	&lt;li&gt;Listen, reflect, write, and improve myself.
	&lt;/li&gt;
	&lt;li&gt;Kill it everyday in my professional role (whether it be at Accenture or elsewhere).
	&lt;/li&gt;
	&lt;li&gt;Focus more of my attention on my friends and on having fun.
	&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;How might I accomplish these goals?&lt;/b&gt;
&lt;/br&gt;
Every list of goals deserves and requires a roadmap to success.
&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Live &amp;amp; breath the attitudes I hope to convey: optimism, happiness, love, openness, determination, drive, &amp;amp; adaptive capacity.
	&lt;/li&gt;
	&lt;li&gt;Journal every week &amp;amp; write letters to those I love.
	&lt;/li&gt;
	&lt;li&gt;Yoga &amp;amp; mediation every week.
	&lt;/li&gt;
	&lt;li&gt;Running every week (not just the gym!)
	&lt;/li&gt;
	&lt;li&gt;Eating clean, eating happy -- and no more sugar, because I&#39;m actually on my way to being diabetic.
	&lt;/li&gt;
	&lt;li&gt;Plan awesome adventures with the people that matter most to me.
	&lt;/li&gt;
	&lt;li&gt;Get back in touch with the ocean (SCUBA time...)
	&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
	&lt;img class=&quot;imageright&quot; src=&quot;/images/blogs/2014-year-in-review/austin_diving.jpg&quot;&gt;In closing, this year has been pretty epic, but it just scratches the surface of the type of years I hope to be leading in the future. I started to find myself this year by taking risks, exploring new opportunities, failing early and often, but ultimately, bringing it all together to reflect on my journey and grow. That&#39;s what a year is supposed to be all-about, right? So, what are you waiting for. Take the dive. Jump into something new this year. Plan an epic adventure for 2015.
&lt;/p&gt;



</description>
        <pubDate>Thu, 01 Jan 2015 00:00:00 -0800</pubDate>
        <link>http://www.austinhay.com/personal%20developement/2015/01/01/Year-in-Review.html</link>
        <guid isPermaLink="true">http://www.austinhay.com/personal%20developement/2015/01/01/Year-in-Review.html</guid>
        
        <category>awareness</category>
        
        <category>reflection</category>
        
        <category>self-development</category>
        
        
        <category>personal developement</category>
        
      </item>
    
      <item>
        <title>Why Web Development Matters</title>
        <description>&lt;img class=&quot;imageright&quot; src=&quot;/images/blogs/nyc_2014.jpg&quot;&gt;
&lt;p&gt;
Last March I signed up for &lt;a href=&quot;http://www.devbootcamp.com&quot;&gt;Dev Bootcamp&lt;/a&gt; in New York City, hoping to round off my education with a deep dive into front end web-programming. My lack of hard-core programming expertise non-withstanding, from my experiences it has always seemed like web programming has had a chip on its shoulder compared to more fundamental CS topics. My CS friends in grad school often compared web-programming and its frameworks to the &quot;fun&quot; part of programming that only came after more rigorous and intellectually challenging back-end work. I might never know the truth in this matter, but I have come to appreciate and highly respect web-programming for its ubiquity and its increasing importance in both technology and business.
&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Blazing fast internet connection and a multitude of connecitivity devices has driven a real need for applications to be light, flexible, and &lt;u&gt;powered by the web&lt;/u&gt;. This shouldn&#39;t come as a surprise either. Desktop software has seen competition for a while -- see &lt;a href=&quot;http://successfulsoftware.net/2013/10/28/is-desktop-software-dead/&quot;&gt;a full breakdown&lt;a/&gt;. Even those that &lt;a href=&quot;http://techcrunch.com/2012/05/04/the-rise-of-big-data-apps-and-the-fall-of-saas/&quot;&gt;question&lt;/a&gt; the strength of SAAS compared to upcoming Big Data Applications underscore the &quot;web&quot; characteristics of most businesses moving forward. Microsoft&#39;s move of its legacy desktop product (Office) to the cloud is a recent example highlighting that web-applications are the future of how businesses will compete and operate over the web.
&lt;/p&gt;</description>
        <pubDate>Sun, 28 Dec 2014 00:00:00 -0800</pubDate>
        <link>http://www.austinhay.com/coding/2014/12/28/how-ive-learned-to-code.html</link>
        <guid isPermaLink="true">http://www.austinhay.com/coding/2014/12/28/how-ive-learned-to-code.html</guid>
        
        <category>ruby</category>
        
        <category>rails</category>
        
        <category>webprogramming</category>
        
        <category>self-development</category>
        
        
        <category>coding</category>
        
      </item>
    
      <item>
        <title>Catching up to Speed</title>
        <description>&lt;p&gt;It&#39;s been a long time since I wrote on my blog. At the time of my last update, I was in India, half-heartedly documenting my experiences, and desperately trying to relax and cool the jet engines after a grueling start to 2014.
&lt;/p&gt;
&lt;img class=&quot;imageleft&quot; src=&quot;/images/blogs/teis/code_ex_1.jpg&quot;&gt;
&lt;!--more--&gt;
&lt;p&gt;Since that time, things have changed in my own life. For one, I enjoyed another extended vacation in Japan and returned home feeling rejuvinated and ready to take on the world. But as the weeks transpired I became a bit exaspirated with my slated employment. Instead of letting my mind wander and prepare, I delved back into computer programming and taught myself some cool tricks. October was very much a month of self-exploration, navigating life after grad school &amp;amp; all its nuances, and reminding myself how to learn efficiently. &lt;/p&gt;

&lt;p&gt;As November rolled about, I kept learning and building in Ruby, Rails, JS, and a few other languages. Eventually I got the idea to build a small &lt;a href=&quot;http://austinhay.com/projects&quot;&gt;app&lt;/a&gt; to help me be more efficient in my role as a CA at Stanford. Then I got some inspiration from finance and google-search analytics. Now, I&#39;m trying to stay busy with code and dive deeper into advanced topics in programming. I&#39;m not sure how this plays in the long-term, but these projects have been incredibly exciting and have pushed my intellectual curiosity further than anything else before.&lt;/p&gt;

&lt;p&gt;Beyond this, I&#39;ve spent a good deal of time revamping my website and digging into the meat of how &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; static website templating works. In the next year I plan to really build out the content for the things I&#39;m passionate about. &lt;/p&gt;

</description>
        <pubDate>Mon, 15 Dec 2014 00:00:00 -0800</pubDate>
        <link>http://www.austinhay.com/personal%20developement/2014/12/15/catching-up-to-speed.html</link>
        <guid isPermaLink="true">http://www.austinhay.com/personal%20developement/2014/12/15/catching-up-to-speed.html</guid>
        
        <category>awareness</category>
        
        <category>reflection</category>
        
        <category>writing</category>
        
        
        <category>personal developement</category>
        
      </item>
    
      <item>
        <title>First look at Research and Innovation in India</title>
        <description>&lt;p&gt;Happy Labor Day to all my loved ones at home in the US. Here in India, there was no such rest for the weary.  The stream of incessant honking and motion begins at 4 in the morning and hardly settles until midnight. &lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;On Monday we got to take our first plunge into business in India with a visit to the General Electric John F. Welch Technology Center, a $175 million complex dedicated to GE&#39;s global research projects across its eight primary business units.&lt;/p&gt;

&lt;p&gt;The complex itself was impressive, and the people it housed, even more so: here there are 2000 research engineers and scientists, two-thirds of which have PhDs. Together they have produced over 3600 US patents and leveraged research technology to drive billions of dollars of revenue across GE&#39;s business units. &lt;/p&gt;

&lt;p&gt;Our group was privileged to see GE&#39;s materials research and materials characterization lab along with their laser technology unit. Here, scientists study, model, and synthesize the composite metals that go into the world&#39;s most impressive turbine engines. The name of this game is all about developing novel materials that operate at high stress and heat, the main environment for airplane engines. &lt;/p&gt;

&lt;img class=&quot;imageright&quot; src=&quot;/images/blogs/teis/india-photo-2.jpg&quot;&gt;

&lt;p&gt;The laser unit worked on technologies that will characterize emissions from power plants all over the world. Pardon my butchering, but in its simplest form, a laser is passed through the gas coming off an emissions tower. The light from the laser is captured after its passed through the gas and the emissions concentrations of the gases can be discovered at a very precise level. &lt;/p&gt;

&lt;p&gt;GE&#39;s team is working on increasing the resolution of these measurements. From a business perspective, this makes for an interesting case as GE also is one of the world&#39;s biggest power plant manufacturers. They make the plants... and they also make the technologies that help improve emissions and meet US regulations set by the EPA. The laser system being built is synced with an ammonia injection technology that helps maintain the emissions levels of harmful greenhouse gases, such as nitrous oxide, at the precise level set by the EPA. So instead of building more efficient power plants, GE has an invested interest in building profitable technologies that will keep emissions at the exact level set by the EPA -- technologies that must be bought by utility companies all over the US and the world. I wouldn&#39;t be surprised to see GE lobbying for stricter environmental standards under the EPA... its good business sense from the perspective of the technologies they offer. &lt;/p&gt;

&lt;p&gt;Tomorrow we head to InfoSys and Embrace, the latter of which is a Stanford Design for Extreme Affordability founded venture. &lt;/p&gt;
</description>
        <pubDate>Tue, 02 Sep 2014 00:00:00 -0700</pubDate>
        <link>http://www.austinhay.com/teis%20blog/2014/09/02/Research-and-Innovation-in-India.html</link>
        <guid isPermaLink="true">http://www.austinhay.com/teis%20blog/2014/09/02/Research-and-Innovation-in-India.html</guid>
        
        <category>India</category>
        
        <category>Business</category>
        
        <category>Technology</category>
        
        <category>Stanford</category>
        
        
        <category>teis blog</category>
        
      </item>
    
      <item>
        <title>Bangaluru: Progress and Progress Needed</title>
        <description>&lt;img class=&quot;imageright&quot; src=&quot;/images/india-photo-1.jpg&quot;&gt;


&lt;p&gt;Maybe I shouldn&#39;t have been so surprised when I got to India. There is a noticeable technology presence in this city, known for its gathering of the world&#39;s biggest players in IT services, but poverty is still woven into the fabric of Bangalore &lt;!--more--&gt; -- as is the case with so many places in India. It was eye-opening to contrast the stories I have heard of India&#39;s rapid rise with the reality of its struggle. Trash lines the streets, cars overwhelm the city&#39;s transportation system, and people are in constant motion. The massive exodus of Indian peoples from rural to urban centers, like Bangalore, has stressed the infrastructure. I have never seen so clearly the need for improved sanitation and human health. Some of the water and WASH problems noticeable here were prevalent in Cambodia when I visited last spring as well.&lt;/p&gt;

&lt;p&gt;Bangalore is very much a city of progress and of progress needed. &lt;/p&gt;
</description>
        <pubDate>Mon, 01 Sep 2014 00:00:00 -0700</pubDate>
        <link>http://www.austinhay.com/teis%20blog/2014/09/01/Bangaluru-Progress-and-Progress-Needed.html</link>
        <guid isPermaLink="true">http://www.austinhay.com/teis%20blog/2014/09/01/Bangaluru-Progress-and-Progress-Needed.html</guid>
        
        <category>India</category>
        
        <category>Stanford</category>
        
        <category>Travel</category>
        
        
        <category>teis blog</category>
        
      </item>
    
  </channel>
</rss>
